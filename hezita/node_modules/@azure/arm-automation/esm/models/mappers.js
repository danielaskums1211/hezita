/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __assign } from "tslib";
import { CloudErrorMapper, BaseResourceMapper } from "@azure/ms-rest-azure-js";
export var CloudError = CloudErrorMapper;
export var BaseResource = BaseResourceMapper;
export var Sku = {
    serializedName: "Sku",
    type: {
        name: "Composite",
        className: "Sku",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            family: {
                serializedName: "family",
                type: {
                    name: "String"
                }
            },
            capacity: {
                serializedName: "capacity",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var Resource = {
    serializedName: "Resource",
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TrackedResource = {
    serializedName: "TrackedResource",
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: __assign(__assign({}, Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            } })
    }
};
export var AutomationAccount = {
    serializedName: "AutomationAccount",
    type: {
        name: "Composite",
        className: "AutomationAccount",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { sku: {
                serializedName: "properties.sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, lastModifiedBy: {
                serializedName: "properties.lastModifiedBy",
                type: {
                    name: "String"
                }
            }, state: {
                readOnly: true,
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            }, creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, etag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            } })
    }
};
export var AutomationAccountCreateOrUpdateParameters = {
    serializedName: "AutomationAccountCreateOrUpdateParameters",
    type: {
        name: "Composite",
        className: "AutomationAccountCreateOrUpdateParameters",
        modelProperties: {
            sku: {
                serializedName: "properties.sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var OperationDisplay = {
    serializedName: "Operation_display",
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Operation = {
    serializedName: "Operation",
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            }
        }
    }
};
export var Statistics = {
    serializedName: "Statistics",
    type: {
        name: "Composite",
        className: "Statistics",
        modelProperties: {
            counterProperty: {
                readOnly: true,
                serializedName: "counterProperty",
                type: {
                    name: "String"
                }
            },
            counterValue: {
                readOnly: true,
                serializedName: "counterValue",
                type: {
                    name: "Number"
                }
            },
            startTime: {
                nullable: false,
                readOnly: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                nullable: true,
                readOnly: true,
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var UsageCounterName = {
    serializedName: "UsageCounterName",
    type: {
        name: "Composite",
        className: "UsageCounterName",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            localizedValue: {
                serializedName: "localizedValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Usage = {
    serializedName: "Usage",
    type: {
        name: "Composite",
        className: "Usage",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "UsageCounterName"
                }
            },
            unit: {
                serializedName: "unit",
                type: {
                    name: "String"
                }
            },
            currentValue: {
                serializedName: "currentValue",
                type: {
                    name: "Number"
                }
            },
            limit: {
                serializedName: "limit",
                type: {
                    name: "Number"
                }
            },
            throttleStatus: {
                serializedName: "throttleStatus",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Key = {
    serializedName: "Key",
    type: {
        name: "Composite",
        className: "Key",
        modelProperties: {
            keyName: {
                readOnly: true,
                serializedName: "KeyName",
                type: {
                    name: "String"
                }
            },
            permissions: {
                readOnly: true,
                serializedName: "Permissions",
                type: {
                    name: "String"
                }
            },
            value: {
                readOnly: true,
                serializedName: "Value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var KeyListResult = {
    serializedName: "KeyListResult",
    type: {
        name: "Composite",
        className: "KeyListResult",
        modelProperties: {
            keys: {
                serializedName: "keys",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Key"
                        }
                    }
                }
            }
        }
    }
};
export var AutomationAccountUpdateParameters = {
    serializedName: "AutomationAccountUpdateParameters",
    type: {
        name: "Composite",
        className: "AutomationAccountUpdateParameters",
        modelProperties: {
            sku: {
                serializedName: "properties.sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var ProxyResource = {
    serializedName: "ProxyResource",
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: __assign({}, Resource.type.modelProperties)
    }
};
export var ErrorResponse = {
    serializedName: "ErrorResponse",
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var CertificateCreateOrUpdateParameters = {
    serializedName: "CertificateCreateOrUpdateParameters",
    type: {
        name: "Composite",
        className: "CertificateCreateOrUpdateParameters",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            base64Value: {
                required: true,
                serializedName: "properties.base64Value",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            },
            thumbprint: {
                serializedName: "properties.thumbprint",
                type: {
                    name: "String"
                }
            },
            isExportable: {
                nullable: false,
                serializedName: "properties.isExportable",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var Certificate = {
    serializedName: "Certificate",
    type: {
        name: "Composite",
        className: "Certificate",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { thumbprint: {
                readOnly: true,
                serializedName: "properties.thumbprint",
                type: {
                    name: "String"
                }
            }, expiryTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.expiryTime",
                type: {
                    name: "DateTime"
                }
            }, isExportable: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.isExportable",
                type: {
                    name: "Boolean"
                }
            }, creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            } })
    }
};
export var CertificateUpdateParameters = {
    serializedName: "CertificateUpdateParameters",
    type: {
        name: "Composite",
        className: "CertificateUpdateParameters",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ConnectionTypeAssociationProperty = {
    serializedName: "ConnectionTypeAssociationProperty",
    type: {
        name: "Composite",
        className: "ConnectionTypeAssociationProperty",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ConnectionCreateOrUpdateParameters = {
    serializedName: "ConnectionCreateOrUpdateParameters",
    type: {
        name: "Composite",
        className: "ConnectionCreateOrUpdateParameters",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            },
            connectionType: {
                required: true,
                serializedName: "properties.connectionType",
                type: {
                    name: "Composite",
                    className: "ConnectionTypeAssociationProperty"
                }
            },
            fieldDefinitionValues: {
                serializedName: "properties.fieldDefinitionValues",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var Connection = {
    serializedName: "Connection",
    type: {
        name: "Composite",
        className: "Connection",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { connectionType: {
                serializedName: "properties.connectionType",
                type: {
                    name: "Composite",
                    className: "ConnectionTypeAssociationProperty"
                }
            }, fieldDefinitionValues: {
                readOnly: true,
                serializedName: "properties.fieldDefinitionValues",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ConnectionUpdateParameters = {
    serializedName: "ConnectionUpdateParameters",
    type: {
        name: "Composite",
        className: "ConnectionUpdateParameters",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            },
            fieldDefinitionValues: {
                serializedName: "properties.fieldDefinitionValues",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var FieldDefinition = {
    serializedName: "FieldDefinition",
    type: {
        name: "Composite",
        className: "FieldDefinition",
        modelProperties: {
            isEncrypted: {
                serializedName: "isEncrypted",
                type: {
                    name: "Boolean"
                }
            },
            isOptional: {
                serializedName: "isOptional",
                type: {
                    name: "Boolean"
                }
            },
            type: {
                required: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ConnectionType = {
    serializedName: "ConnectionType",
    type: {
        name: "Composite",
        className: "ConnectionType",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            isGlobal: {
                serializedName: "properties.isGlobal",
                type: {
                    name: "Boolean"
                }
            },
            fieldDefinitions: {
                readOnly: true,
                serializedName: "properties.fieldDefinitions",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "FieldDefinition"
                        }
                    }
                }
            },
            creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedTime: {
                nullable: false,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ConnectionTypeCreateOrUpdateParameters = {
    serializedName: "ConnectionTypeCreateOrUpdateParameters",
    type: {
        name: "Composite",
        className: "ConnectionTypeCreateOrUpdateParameters",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            isGlobal: {
                serializedName: "properties.isGlobal",
                type: {
                    name: "Boolean"
                }
            },
            fieldDefinitions: {
                required: true,
                serializedName: "properties.fieldDefinitions",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "FieldDefinition"
                        }
                    }
                }
            }
        }
    }
};
export var CredentialCreateOrUpdateParameters = {
    serializedName: "CredentialCreateOrUpdateParameters",
    type: {
        name: "Composite",
        className: "CredentialCreateOrUpdateParameters",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            userName: {
                required: true,
                serializedName: "properties.userName",
                type: {
                    name: "String"
                }
            },
            password: {
                required: true,
                serializedName: "properties.password",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Credential = {
    serializedName: "Credential",
    type: {
        name: "Composite",
        className: "Credential",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { userName: {
                readOnly: true,
                serializedName: "properties.userName",
                type: {
                    name: "String"
                }
            }, creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            } })
    }
};
export var CredentialUpdateParameters = {
    serializedName: "CredentialUpdateParameters",
    type: {
        name: "Composite",
        className: "CredentialUpdateParameters",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            userName: {
                serializedName: "properties.userName",
                type: {
                    name: "String"
                }
            },
            password: {
                serializedName: "properties.password",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ContentHash = {
    serializedName: "ContentHash",
    type: {
        name: "Composite",
        className: "ContentHash",
        modelProperties: {
            algorithm: {
                required: true,
                serializedName: "algorithm",
                type: {
                    name: "String"
                }
            },
            value: {
                required: true,
                serializedName: "value",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ContentSource = {
    serializedName: "ContentSource",
    type: {
        name: "Composite",
        className: "ContentSource",
        modelProperties: {
            hash: {
                serializedName: "hash",
                type: {
                    name: "Composite",
                    className: "ContentHash"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscConfigurationParameter = {
    serializedName: "DscConfigurationParameter",
    type: {
        name: "Composite",
        className: "DscConfigurationParameter",
        modelProperties: {
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            isMandatory: {
                serializedName: "isMandatory",
                type: {
                    name: "Boolean"
                }
            },
            position: {
                serializedName: "position",
                type: {
                    name: "Number"
                }
            },
            defaultValue: {
                serializedName: "defaultValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscConfigurationCreateOrUpdateParameters = {
    serializedName: "DscConfigurationCreateOrUpdateParameters",
    type: {
        name: "Composite",
        className: "DscConfigurationCreateOrUpdateParameters",
        modelProperties: {
            logVerbose: {
                serializedName: "properties.logVerbose",
                type: {
                    name: "Boolean"
                }
            },
            logProgress: {
                serializedName: "properties.logProgress",
                type: {
                    name: "Boolean"
                }
            },
            source: {
                required: true,
                serializedName: "properties.source",
                type: {
                    name: "Composite",
                    className: "ContentSource"
                }
            },
            parameters: {
                serializedName: "properties.parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "DscConfigurationParameter"
                        }
                    }
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var DscConfiguration = {
    serializedName: "DscConfiguration",
    type: {
        name: "Composite",
        className: "DscConfiguration",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { provisioningState: {
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Succeeded"
                    ]
                }
            }, jobCount: {
                serializedName: "properties.jobCount",
                type: {
                    name: "Number"
                }
            }, parameters: {
                serializedName: "properties.parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "DscConfigurationParameter"
                        }
                    }
                }
            }, source: {
                serializedName: "properties.source",
                type: {
                    name: "Composite",
                    className: "ContentSource"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            }, logVerbose: {
                serializedName: "properties.logVerbose",
                type: {
                    name: "Boolean"
                }
            }, creationTime: {
                nullable: false,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                nullable: false,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, nodeConfigurationCount: {
                nullable: false,
                serializedName: "properties.nodeConfigurationCount",
                type: {
                    name: "Number"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, etag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            } })
    }
};
export var DscConfigurationUpdateParameters = {
    serializedName: "DscConfigurationUpdateParameters",
    type: {
        name: "Composite",
        className: "DscConfigurationUpdateParameters",
        modelProperties: {
            logVerbose: {
                serializedName: "properties.logVerbose",
                type: {
                    name: "Boolean"
                }
            },
            logProgress: {
                serializedName: "properties.logProgress",
                type: {
                    name: "Boolean"
                }
            },
            source: {
                required: true,
                serializedName: "properties.source",
                type: {
                    name: "Composite",
                    className: "ContentSource"
                }
            },
            parameters: {
                serializedName: "properties.parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "DscConfigurationParameter"
                        }
                    }
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var RunAsCredentialAssociationProperty = {
    serializedName: "RunAsCredentialAssociationProperty",
    type: {
        name: "Composite",
        className: "RunAsCredentialAssociationProperty",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var HybridRunbookWorker = {
    serializedName: "HybridRunbookWorker",
    type: {
        name: "Composite",
        className: "HybridRunbookWorker",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            ip: {
                serializedName: "ip",
                type: {
                    name: "String"
                }
            },
            registrationTime: {
                nullable: false,
                serializedName: "registrationTime",
                type: {
                    name: "DateTime"
                }
            },
            lastSeenDateTime: {
                nullable: false,
                serializedName: "lastSeenDateTime",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var HybridRunbookWorkerGroup = {
    serializedName: "HybridRunbookWorkerGroup",
    type: {
        name: "Composite",
        className: "HybridRunbookWorkerGroup",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            hybridRunbookWorkers: {
                serializedName: "hybridRunbookWorkers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HybridRunbookWorker"
                        }
                    }
                }
            },
            credential: {
                serializedName: "credential",
                type: {
                    name: "Composite",
                    className: "RunAsCredentialAssociationProperty"
                }
            },
            groupType: {
                serializedName: "groupType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var HybridRunbookWorkerGroupUpdateParameters = {
    serializedName: "HybridRunbookWorkerGroupUpdateParameters",
    type: {
        name: "Composite",
        className: "HybridRunbookWorkerGroupUpdateParameters",
        modelProperties: {
            credential: {
                serializedName: "credential",
                type: {
                    name: "Composite",
                    className: "RunAsCredentialAssociationProperty"
                }
            }
        }
    }
};
export var ScheduleAssociationProperty = {
    serializedName: "ScheduleAssociationProperty",
    type: {
        name: "Composite",
        className: "ScheduleAssociationProperty",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RunbookAssociationProperty = {
    serializedName: "RunbookAssociationProperty",
    type: {
        name: "Composite",
        className: "RunbookAssociationProperty",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var JobSchedule = {
    serializedName: "JobSchedule",
    type: {
        name: "Composite",
        className: "JobSchedule",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            jobScheduleId: {
                serializedName: "properties.jobScheduleId",
                type: {
                    name: "String"
                }
            },
            schedule: {
                serializedName: "properties.schedule",
                type: {
                    name: "Composite",
                    className: "ScheduleAssociationProperty"
                }
            },
            runbook: {
                serializedName: "properties.runbook",
                type: {
                    name: "Composite",
                    className: "RunbookAssociationProperty"
                }
            },
            runOn: {
                serializedName: "properties.runOn",
                type: {
                    name: "String"
                }
            },
            parameters: {
                serializedName: "properties.parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var JobScheduleCreateParameters = {
    serializedName: "JobScheduleCreateParameters",
    type: {
        name: "Composite",
        className: "JobScheduleCreateParameters",
        modelProperties: {
            schedule: {
                required: true,
                serializedName: "properties.schedule",
                type: {
                    name: "Composite",
                    className: "ScheduleAssociationProperty"
                }
            },
            runbook: {
                required: true,
                serializedName: "properties.runbook",
                type: {
                    name: "Composite",
                    className: "RunbookAssociationProperty"
                }
            },
            runOn: {
                serializedName: "properties.runOn",
                type: {
                    name: "String"
                }
            },
            parameters: {
                serializedName: "properties.parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var LinkedWorkspace = {
    serializedName: "LinkedWorkspace",
    type: {
        name: "Composite",
        className: "LinkedWorkspace",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ActivityParameterValidationSet = {
    serializedName: "ActivityParameterValidationSet",
    type: {
        name: "Composite",
        className: "ActivityParameterValidationSet",
        modelProperties: {
            memberValue: {
                serializedName: "memberValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ActivityParameter = {
    serializedName: "ActivityParameter",
    type: {
        name: "Composite",
        className: "ActivityParameter",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            isMandatory: {
                serializedName: "isMandatory",
                type: {
                    name: "Boolean"
                }
            },
            isDynamic: {
                serializedName: "isDynamic",
                type: {
                    name: "Boolean"
                }
            },
            position: {
                serializedName: "position",
                type: {
                    name: "Number"
                }
            },
            valueFromPipeline: {
                serializedName: "valueFromPipeline",
                type: {
                    name: "Boolean"
                }
            },
            valueFromPipelineByPropertyName: {
                serializedName: "valueFromPipelineByPropertyName",
                type: {
                    name: "Boolean"
                }
            },
            valueFromRemainingArguments: {
                serializedName: "valueFromRemainingArguments",
                type: {
                    name: "Boolean"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            validationSet: {
                serializedName: "validationSet",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ActivityParameterValidationSet"
                        }
                    }
                }
            }
        }
    }
};
export var ActivityParameterSet = {
    serializedName: "ActivityParameterSet",
    type: {
        name: "Composite",
        className: "ActivityParameterSet",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ActivityParameter"
                        }
                    }
                }
            }
        }
    }
};
export var ActivityOutputType = {
    serializedName: "ActivityOutputType",
    type: {
        name: "Composite",
        className: "ActivityOutputType",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Activity = {
    serializedName: "Activity",
    type: {
        name: "Composite",
        className: "Activity",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            definition: {
                serializedName: "properties.definition",
                type: {
                    name: "String"
                }
            },
            parameterSets: {
                serializedName: "properties.parameterSets",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ActivityParameterSet"
                        }
                    }
                }
            },
            outputTypes: {
                serializedName: "properties.outputTypes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ActivityOutputType"
                        }
                    }
                }
            },
            creationTime: {
                nullable: false,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedTime: {
                nullable: false,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ModuleErrorInfo = {
    serializedName: "ModuleErrorInfo",
    type: {
        name: "Composite",
        className: "ModuleErrorInfo",
        modelProperties: {
            code: {
                serializedName: "code",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ContentLink = {
    serializedName: "ContentLink",
    type: {
        name: "Composite",
        className: "ContentLink",
        modelProperties: {
            uri: {
                serializedName: "uri",
                type: {
                    name: "String"
                }
            },
            contentHash: {
                serializedName: "contentHash",
                type: {
                    name: "Composite",
                    className: "ContentHash"
                }
            },
            version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Module = {
    serializedName: "Module",
    type: {
        name: "Composite",
        className: "Module",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { isGlobal: {
                serializedName: "properties.isGlobal",
                type: {
                    name: "Boolean"
                }
            }, version: {
                serializedName: "properties.version",
                type: {
                    name: "String"
                }
            }, sizeInBytes: {
                serializedName: "properties.sizeInBytes",
                type: {
                    name: "Number"
                }
            }, activityCount: {
                serializedName: "properties.activityCount",
                type: {
                    name: "Number"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Created",
                        "Creating",
                        "StartingImportModuleRunbook",
                        "RunningImportModuleRunbook",
                        "ContentRetrieved",
                        "ContentDownloaded",
                        "ContentValidated",
                        "ConnectionTypeImported",
                        "ContentStored",
                        "ModuleDataStored",
                        "ActivitiesStored",
                        "ModuleImportRunbookComplete",
                        "Succeeded",
                        "Failed",
                        "Cancelled",
                        "Updating"
                    ]
                }
            }, contentLink: {
                serializedName: "properties.contentLink",
                type: {
                    name: "Composite",
                    className: "ContentLink"
                }
            }, error: {
                serializedName: "properties.error",
                type: {
                    name: "Composite",
                    className: "ModuleErrorInfo"
                }
            }, creationTime: {
                nullable: false,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                nullable: false,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, isComposite: {
                serializedName: "properties.isComposite",
                type: {
                    name: "Boolean"
                }
            }, etag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ModuleCreateOrUpdateParameters = {
    serializedName: "ModuleCreateOrUpdateParameters",
    type: {
        name: "Composite",
        className: "ModuleCreateOrUpdateParameters",
        modelProperties: {
            contentLink: {
                required: true,
                serializedName: "properties.contentLink",
                type: {
                    name: "Composite",
                    className: "ContentLink"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var ModuleUpdateParameters = {
    serializedName: "ModuleUpdateParameters",
    type: {
        name: "Composite",
        className: "ModuleUpdateParameters",
        modelProperties: {
            contentLink: {
                serializedName: "properties.contentLink",
                type: {
                    name: "Composite",
                    className: "ContentLink"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var TypeField = {
    serializedName: "TypeField",
    type: {
        name: "Composite",
        className: "TypeField",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AdvancedScheduleMonthlyOccurrence = {
    serializedName: "AdvancedScheduleMonthlyOccurrence",
    type: {
        name: "Composite",
        className: "AdvancedScheduleMonthlyOccurrence",
        modelProperties: {
            occurrence: {
                serializedName: "occurrence",
                type: {
                    name: "Number"
                }
            },
            day: {
                serializedName: "day",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AdvancedSchedule = {
    serializedName: "AdvancedSchedule",
    type: {
        name: "Composite",
        className: "AdvancedSchedule",
        modelProperties: {
            weekDays: {
                serializedName: "weekDays",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            monthDays: {
                serializedName: "monthDays",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Number"
                        }
                    }
                }
            },
            monthlyOccurrences: {
                serializedName: "monthlyOccurrences",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AdvancedScheduleMonthlyOccurrence"
                        }
                    }
                }
            }
        }
    }
};
export var ScheduleCreateOrUpdateParameters = {
    serializedName: "ScheduleCreateOrUpdateParameters",
    type: {
        name: "Composite",
        className: "ScheduleCreateOrUpdateParameters",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            },
            startTime: {
                required: true,
                nullable: false,
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            },
            expiryTime: {
                nullable: true,
                serializedName: "properties.expiryTime",
                type: {
                    name: "DateTime"
                }
            },
            interval: {
                serializedName: "properties.interval",
                type: {
                    name: "Object"
                }
            },
            frequency: {
                required: true,
                serializedName: "properties.frequency",
                type: {
                    name: "String"
                }
            },
            timeZone: {
                serializedName: "properties.timeZone",
                type: {
                    name: "String"
                }
            },
            advancedSchedule: {
                serializedName: "properties.advancedSchedule",
                type: {
                    name: "Composite",
                    className: "AdvancedSchedule"
                }
            }
        }
    }
};
export var ScheduleProperties = {
    serializedName: "ScheduleProperties",
    type: {
        name: "Composite",
        className: "ScheduleProperties",
        modelProperties: {
            startTime: {
                nullable: false,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            startTimeOffsetMinutes: {
                nullable: false,
                readOnly: true,
                serializedName: "startTimeOffsetMinutes",
                type: {
                    name: "Number"
                }
            },
            expiryTime: {
                nullable: true,
                serializedName: "expiryTime",
                type: {
                    name: "DateTime"
                }
            },
            expiryTimeOffsetMinutes: {
                nullable: false,
                serializedName: "expiryTimeOffsetMinutes",
                type: {
                    name: "Number"
                }
            },
            isEnabled: {
                serializedName: "isEnabled",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            },
            nextRun: {
                nullable: true,
                serializedName: "nextRun",
                type: {
                    name: "DateTime"
                }
            },
            nextRunOffsetMinutes: {
                nullable: false,
                serializedName: "nextRunOffsetMinutes",
                type: {
                    name: "Number"
                }
            },
            interval: {
                serializedName: "interval",
                type: {
                    name: "Number"
                }
            },
            frequency: {
                serializedName: "frequency",
                type: {
                    name: "String"
                }
            },
            timeZone: {
                serializedName: "timeZone",
                type: {
                    name: "String"
                }
            },
            advancedSchedule: {
                serializedName: "advancedSchedule",
                type: {
                    name: "Composite",
                    className: "AdvancedSchedule"
                }
            },
            creationTime: {
                nullable: false,
                serializedName: "creationTime",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedTime: {
                nullable: false,
                serializedName: "lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Schedule = {
    serializedName: "Schedule",
    type: {
        name: "Composite",
        className: "Schedule",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { startTime: {
                nullable: false,
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, startTimeOffsetMinutes: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.startTimeOffsetMinutes",
                type: {
                    name: "Number"
                }
            }, expiryTime: {
                nullable: true,
                serializedName: "properties.expiryTime",
                type: {
                    name: "DateTime"
                }
            }, expiryTimeOffsetMinutes: {
                nullable: false,
                serializedName: "properties.expiryTimeOffsetMinutes",
                type: {
                    name: "Number"
                }
            }, isEnabled: {
                serializedName: "properties.isEnabled",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, nextRun: {
                nullable: true,
                serializedName: "properties.nextRun",
                type: {
                    name: "DateTime"
                }
            }, nextRunOffsetMinutes: {
                nullable: false,
                serializedName: "properties.nextRunOffsetMinutes",
                type: {
                    name: "Number"
                }
            }, interval: {
                serializedName: "properties.interval",
                type: {
                    name: "Number"
                }
            }, frequency: {
                serializedName: "properties.frequency",
                type: {
                    name: "String"
                }
            }, timeZone: {
                serializedName: "properties.timeZone",
                type: {
                    name: "String"
                }
            }, advancedSchedule: {
                serializedName: "properties.advancedSchedule",
                type: {
                    name: "Composite",
                    className: "AdvancedSchedule"
                }
            }, creationTime: {
                nullable: false,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                nullable: false,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            } })
    }
};
export var ScheduleUpdateParameters = {
    serializedName: "ScheduleUpdateParameters",
    type: {
        name: "Composite",
        className: "ScheduleUpdateParameters",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            },
            isEnabled: {
                serializedName: "properties.isEnabled",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var VariableCreateOrUpdateParameters = {
    serializedName: "VariableCreateOrUpdateParameters",
    type: {
        name: "Composite",
        className: "VariableCreateOrUpdateParameters",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "properties.value",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            },
            isEncrypted: {
                serializedName: "properties.isEncrypted",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var Variable = {
    serializedName: "Variable",
    type: {
        name: "Composite",
        className: "Variable",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { value: {
                serializedName: "properties.value",
                type: {
                    name: "String"
                }
            }, isEncrypted: {
                nullable: true,
                serializedName: "properties.isEncrypted",
                type: {
                    name: "Boolean"
                }
            }, creationTime: {
                nullable: false,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                nullable: false,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            } })
    }
};
export var VariableUpdateParameters = {
    serializedName: "VariableUpdateParameters",
    type: {
        name: "Composite",
        className: "VariableUpdateParameters",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "properties.value",
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Webhook = {
    serializedName: "Webhook",
    type: {
        name: "Composite",
        className: "Webhook",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { isEnabled: {
                serializedName: "properties.isEnabled",
                defaultValue: false,
                type: {
                    name: "Boolean"
                }
            }, uri: {
                serializedName: "properties.uri",
                type: {
                    name: "String"
                }
            }, expiryTime: {
                nullable: false,
                serializedName: "properties.expiryTime",
                type: {
                    name: "DateTime"
                }
            }, lastInvokedTime: {
                nullable: true,
                serializedName: "properties.lastInvokedTime",
                type: {
                    name: "DateTime"
                }
            }, parameters: {
                serializedName: "properties.parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, runbook: {
                serializedName: "properties.runbook",
                type: {
                    name: "Composite",
                    className: "RunbookAssociationProperty"
                }
            }, runOn: {
                serializedName: "properties.runOn",
                type: {
                    name: "String"
                }
            }, creationTime: {
                nullable: false,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                nullable: false,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedBy: {
                serializedName: "properties.lastModifiedBy",
                type: {
                    name: "String"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            } })
    }
};
export var WebhookUpdateParameters = {
    serializedName: "WebhookUpdateParameters",
    type: {
        name: "Composite",
        className: "WebhookUpdateParameters",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            isEnabled: {
                serializedName: "properties.isEnabled",
                type: {
                    name: "Boolean"
                }
            },
            runOn: {
                serializedName: "properties.runOn",
                type: {
                    name: "String"
                }
            },
            parameters: {
                serializedName: "properties.parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var WebhookCreateOrUpdateParameters = {
    serializedName: "WebhookCreateOrUpdateParameters",
    type: {
        name: "Composite",
        className: "WebhookCreateOrUpdateParameters",
        modelProperties: {
            name: {
                required: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            isEnabled: {
                serializedName: "properties.isEnabled",
                type: {
                    name: "Boolean"
                }
            },
            uri: {
                serializedName: "properties.uri",
                type: {
                    name: "String"
                }
            },
            expiryTime: {
                nullable: false,
                serializedName: "properties.expiryTime",
                type: {
                    name: "DateTime"
                }
            },
            parameters: {
                serializedName: "properties.parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            runbook: {
                serializedName: "properties.runbook",
                type: {
                    name: "Composite",
                    className: "RunbookAssociationProperty"
                }
            },
            runOn: {
                serializedName: "properties.runOn",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var Watcher = {
    serializedName: "Watcher",
    type: {
        name: "Composite",
        className: "Watcher",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { executionFrequencyInSeconds: {
                serializedName: "properties.executionFrequencyInSeconds",
                type: {
                    name: "Number"
                }
            }, scriptName: {
                serializedName: "properties.scriptName",
                type: {
                    name: "String"
                }
            }, scriptParameters: {
                serializedName: "properties.scriptParameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, scriptRunOn: {
                serializedName: "properties.scriptRunOn",
                type: {
                    name: "String"
                }
            }, status: {
                readOnly: true,
                serializedName: "properties.status",
                type: {
                    name: "String"
                }
            }, creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedBy: {
                readOnly: true,
                serializedName: "properties.lastModifiedBy",
                type: {
                    name: "String"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, etag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            } })
    }
};
export var WatcherUpdateParameters = {
    serializedName: "WatcherUpdateParameters",
    type: {
        name: "Composite",
        className: "WatcherUpdateParameters",
        modelProperties: {
            executionFrequencyInSeconds: {
                serializedName: "properties.executionFrequencyInSeconds",
                type: {
                    name: "Number"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var WindowsProperties = {
    serializedName: "WindowsProperties",
    type: {
        name: "Composite",
        className: "WindowsProperties",
        modelProperties: {
            includedUpdateClassifications: {
                serializedName: "includedUpdateClassifications",
                type: {
                    name: "String"
                }
            },
            excludedKbNumbers: {
                serializedName: "excludedKbNumbers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            includedKbNumbers: {
                serializedName: "includedKbNumbers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            rebootSetting: {
                serializedName: "rebootSetting",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var LinuxProperties = {
    serializedName: "LinuxProperties",
    type: {
        name: "Composite",
        className: "LinuxProperties",
        modelProperties: {
            includedPackageClassifications: {
                serializedName: "includedPackageClassifications",
                type: {
                    name: "String"
                }
            },
            excludedPackageNameMasks: {
                serializedName: "excludedPackageNameMasks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            includedPackageNameMasks: {
                serializedName: "includedPackageNameMasks",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            rebootSetting: {
                serializedName: "rebootSetting",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TagSettingsProperties = {
    serializedName: "TagSettingsProperties",
    type: {
        name: "Composite",
        className: "TagSettingsProperties",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Sequence",
                            element: {
                                type: {
                                    name: "String"
                                }
                            }
                        }
                    }
                }
            },
            filterOperator: {
                serializedName: "filterOperator",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "All",
                        "Any"
                    ]
                }
            }
        }
    }
};
export var AzureQueryProperties = {
    serializedName: "AzureQueryProperties",
    type: {
        name: "Composite",
        className: "AzureQueryProperties",
        modelProperties: {
            scope: {
                serializedName: "scope",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            locations: {
                serializedName: "locations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            tagSettings: {
                serializedName: "tagSettings",
                type: {
                    name: "Composite",
                    className: "TagSettingsProperties"
                }
            }
        }
    }
};
export var NonAzureQueryProperties = {
    serializedName: "NonAzureQueryProperties",
    type: {
        name: "Composite",
        className: "NonAzureQueryProperties",
        modelProperties: {
            functionAlias: {
                serializedName: "functionAlias",
                type: {
                    name: "String"
                }
            },
            workspaceId: {
                serializedName: "workspaceId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TargetProperties = {
    serializedName: "TargetProperties",
    type: {
        name: "Composite",
        className: "TargetProperties",
        modelProperties: {
            azureQueries: {
                serializedName: "azureQueries",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AzureQueryProperties"
                        }
                    }
                }
            },
            nonAzureQueries: {
                serializedName: "nonAzureQueries",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NonAzureQueryProperties"
                        }
                    }
                }
            }
        }
    }
};
export var UpdateConfiguration = {
    serializedName: "updateConfiguration",
    type: {
        name: "Composite",
        className: "UpdateConfiguration",
        modelProperties: {
            operatingSystem: {
                required: true,
                serializedName: "operatingSystem",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Windows",
                        "Linux"
                    ]
                }
            },
            windows: {
                serializedName: "windows",
                type: {
                    name: "Composite",
                    className: "WindowsProperties"
                }
            },
            linux: {
                serializedName: "linux",
                type: {
                    name: "Composite",
                    className: "LinuxProperties"
                }
            },
            duration: {
                serializedName: "duration",
                type: {
                    name: "TimeSpan"
                }
            },
            azureVirtualMachines: {
                serializedName: "azureVirtualMachines",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            nonAzureComputerNames: {
                serializedName: "nonAzureComputerNames",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            targets: {
                serializedName: "targets",
                type: {
                    name: "Composite",
                    className: "TargetProperties"
                }
            }
        }
    }
};
export var TaskProperties = {
    serializedName: "taskProperties",
    type: {
        name: "Composite",
        className: "TaskProperties",
        modelProperties: {
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            source: {
                serializedName: "source",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SoftwareUpdateConfigurationTasks = {
    serializedName: "softwareUpdateConfigurationTasks",
    type: {
        name: "Composite",
        className: "SoftwareUpdateConfigurationTasks",
        modelProperties: {
            preTask: {
                serializedName: "preTask",
                type: {
                    name: "Composite",
                    className: "TaskProperties"
                }
            },
            postTask: {
                serializedName: "postTask",
                type: {
                    name: "Composite",
                    className: "TaskProperties"
                }
            }
        }
    }
};
export var SoftwareUpdateConfiguration = {
    serializedName: "softwareUpdateConfiguration",
    type: {
        name: "Composite",
        className: "SoftwareUpdateConfiguration",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            updateConfiguration: {
                required: true,
                serializedName: "properties.updateConfiguration",
                type: {
                    name: "Composite",
                    className: "UpdateConfiguration"
                }
            },
            scheduleInfo: {
                required: true,
                serializedName: "properties.scheduleInfo",
                type: {
                    name: "Composite",
                    className: "ScheduleProperties"
                }
            },
            provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            },
            error: {
                serializedName: "properties.error",
                type: {
                    name: "Composite",
                    className: "ErrorResponse"
                }
            },
            creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            },
            createdBy: {
                readOnly: true,
                serializedName: "properties.createdBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                readOnly: true,
                serializedName: "properties.lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            tasks: {
                serializedName: "properties.tasks",
                type: {
                    name: "Composite",
                    className: "SoftwareUpdateConfigurationTasks"
                }
            }
        }
    }
};
export var CollectionItemUpdateConfiguration = {
    serializedName: "collectionItemUpdateConfiguration",
    type: {
        name: "Composite",
        className: "CollectionItemUpdateConfiguration",
        modelProperties: {
            azureVirtualMachines: {
                serializedName: "azureVirtualMachines",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            duration: {
                serializedName: "duration",
                type: {
                    name: "TimeSpan"
                }
            }
        }
    }
};
export var SoftwareUpdateConfigurationCollectionItem = {
    serializedName: "softwareUpdateConfigurationCollectionItem",
    type: {
        name: "Composite",
        className: "SoftwareUpdateConfigurationCollectionItem",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            updateConfiguration: {
                serializedName: "properties.updateConfiguration",
                type: {
                    name: "Composite",
                    className: "CollectionItemUpdateConfiguration"
                }
            },
            frequency: {
                serializedName: "properties.frequency",
                type: {
                    name: "String"
                }
            },
            startTime: {
                nullable: false,
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            },
            creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            },
            provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            },
            nextRun: {
                nullable: true,
                serializedName: "properties.nextRun",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var SoftwareUpdateConfigurationListResult = {
    serializedName: "softwareUpdateConfigurationListResult",
    type: {
        name: "Composite",
        className: "SoftwareUpdateConfigurationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SoftwareUpdateConfigurationCollectionItem"
                        }
                    }
                }
            }
        }
    }
};
export var UpdateConfigurationNavigation = {
    serializedName: "updateConfigurationNavigation",
    type: {
        name: "Composite",
        className: "UpdateConfigurationNavigation",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SoftareUpdateConfigurationRunTaskProperties = {
    serializedName: "softareUpdateConfigurationRunTaskProperties",
    type: {
        name: "Composite",
        className: "SoftareUpdateConfigurationRunTaskProperties",
        modelProperties: {
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            source: {
                serializedName: "source",
                type: {
                    name: "String"
                }
            },
            jobId: {
                serializedName: "jobId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SoftareUpdateConfigurationRunTasks = {
    serializedName: "softareUpdateConfigurationRunTasks",
    type: {
        name: "Composite",
        className: "SoftareUpdateConfigurationRunTasks",
        modelProperties: {
            preTask: {
                serializedName: "preTask",
                type: {
                    name: "Composite",
                    className: "SoftareUpdateConfigurationRunTaskProperties"
                }
            },
            postTask: {
                serializedName: "postTask",
                type: {
                    name: "Composite",
                    className: "SoftareUpdateConfigurationRunTaskProperties"
                }
            }
        }
    }
};
export var SoftwareUpdateConfigurationRun = {
    serializedName: "softwareUpdateConfigurationRun",
    type: {
        name: "Composite",
        className: "SoftwareUpdateConfigurationRun",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            softwareUpdateConfiguration: {
                serializedName: "properties.softwareUpdateConfiguration",
                type: {
                    name: "Composite",
                    className: "UpdateConfigurationNavigation"
                }
            },
            status: {
                readOnly: true,
                serializedName: "properties.status",
                type: {
                    name: "String"
                }
            },
            configuredDuration: {
                readOnly: true,
                serializedName: "properties.configuredDuration",
                type: {
                    name: "String"
                }
            },
            osType: {
                readOnly: true,
                serializedName: "properties.osType",
                type: {
                    name: "String"
                }
            },
            startTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            },
            computerCount: {
                readOnly: true,
                serializedName: "properties.computerCount",
                type: {
                    name: "Number"
                }
            },
            failedCount: {
                readOnly: true,
                serializedName: "properties.failedCount",
                type: {
                    name: "Number"
                }
            },
            creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            },
            createdBy: {
                readOnly: true,
                serializedName: "properties.createdBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                readOnly: true,
                serializedName: "properties.lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            tasks: {
                serializedName: "properties.tasks",
                type: {
                    name: "Composite",
                    className: "SoftareUpdateConfigurationRunTasks"
                }
            }
        }
    }
};
export var SoftwareUpdateConfigurationRunListResult = {
    serializedName: "softwareUpdateConfigurationRunListResult",
    type: {
        name: "Composite",
        className: "SoftwareUpdateConfigurationRunListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SoftwareUpdateConfigurationRun"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var JobNavigation = {
    serializedName: "jobNavigation",
    type: {
        name: "Composite",
        className: "JobNavigation",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SoftwareUpdateConfigurationMachineRun = {
    serializedName: "softwareUpdateConfigurationMachineRun",
    type: {
        name: "Composite",
        className: "SoftwareUpdateConfigurationMachineRun",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            targetComputer: {
                readOnly: true,
                serializedName: "properties.targetComputer",
                type: {
                    name: "String"
                }
            },
            targetComputerType: {
                readOnly: true,
                serializedName: "properties.targetComputerType",
                type: {
                    name: "String"
                }
            },
            softwareUpdateConfiguration: {
                serializedName: "properties.softwareUpdateConfiguration",
                type: {
                    name: "Composite",
                    className: "UpdateConfigurationNavigation"
                }
            },
            status: {
                readOnly: true,
                serializedName: "properties.status",
                type: {
                    name: "String"
                }
            },
            osType: {
                readOnly: true,
                serializedName: "properties.osType",
                type: {
                    name: "String"
                }
            },
            correlationId: {
                readOnly: true,
                serializedName: "properties.correlationId",
                type: {
                    name: "Uuid"
                }
            },
            sourceComputerId: {
                readOnly: true,
                serializedName: "properties.sourceComputerId",
                type: {
                    name: "Uuid"
                }
            },
            startTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            },
            configuredDuration: {
                readOnly: true,
                serializedName: "properties.configuredDuration",
                type: {
                    name: "String"
                }
            },
            job: {
                serializedName: "properties.job",
                type: {
                    name: "Composite",
                    className: "JobNavigation"
                }
            },
            creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            },
            createdBy: {
                readOnly: true,
                serializedName: "properties.createdBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                readOnly: true,
                serializedName: "properties.lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            error: {
                serializedName: "properties.error",
                type: {
                    name: "Composite",
                    className: "ErrorResponse"
                }
            }
        }
    }
};
export var SoftwareUpdateConfigurationMachineRunListResult = {
    serializedName: "softwareUpdateConfigurationMachineRunListResult",
    type: {
        name: "Composite",
        className: "SoftwareUpdateConfigurationMachineRunListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SoftwareUpdateConfigurationMachineRun"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SourceControl = {
    serializedName: "SourceControl",
    type: {
        name: "Composite",
        className: "SourceControl",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { repoUrl: {
                serializedName: "properties.repoUrl",
                type: {
                    name: "String"
                }
            }, branch: {
                serializedName: "properties.branch",
                type: {
                    name: "String"
                }
            }, folderPath: {
                serializedName: "properties.folderPath",
                type: {
                    name: "String"
                }
            }, autoSync: {
                serializedName: "properties.autoSync",
                type: {
                    name: "Boolean"
                }
            }, publishRunbook: {
                serializedName: "properties.publishRunbook",
                type: {
                    name: "Boolean"
                }
            }, sourceType: {
                serializedName: "properties.sourceType",
                type: {
                    name: "String"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, creationTime: {
                nullable: false,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                nullable: false,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export var SourceControlSecurityTokenProperties = {
    serializedName: "SourceControlSecurityTokenProperties",
    type: {
        name: "Composite",
        className: "SourceControlSecurityTokenProperties",
        modelProperties: {
            accessToken: {
                serializedName: "accessToken",
                constraints: {
                    MaxLength: 1024
                },
                type: {
                    name: "String"
                }
            },
            refreshToken: {
                serializedName: "refreshToken",
                constraints: {
                    MaxLength: 1024
                },
                type: {
                    name: "String"
                }
            },
            tokenType: {
                serializedName: "tokenType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SourceControlUpdateParameters = {
    serializedName: "SourceControlUpdateParameters",
    type: {
        name: "Composite",
        className: "SourceControlUpdateParameters",
        modelProperties: {
            branch: {
                serializedName: "properties.branch",
                type: {
                    name: "String"
                }
            },
            folderPath: {
                serializedName: "properties.folderPath",
                type: {
                    name: "String"
                }
            },
            autoSync: {
                serializedName: "properties.autoSync",
                type: {
                    name: "Boolean"
                }
            },
            publishRunbook: {
                serializedName: "properties.publishRunbook",
                type: {
                    name: "Boolean"
                }
            },
            securityToken: {
                serializedName: "properties.securityToken",
                type: {
                    name: "Composite",
                    className: "SourceControlSecurityTokenProperties"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SourceControlCreateOrUpdateParameters = {
    serializedName: "SourceControlCreateOrUpdateParameters",
    type: {
        name: "Composite",
        className: "SourceControlCreateOrUpdateParameters",
        modelProperties: {
            repoUrl: {
                serializedName: "properties.repoUrl",
                constraints: {
                    MaxLength: 2000
                },
                type: {
                    name: "String"
                }
            },
            branch: {
                serializedName: "properties.branch",
                constraints: {
                    MaxLength: 255
                },
                type: {
                    name: "String"
                }
            },
            folderPath: {
                serializedName: "properties.folderPath",
                constraints: {
                    MaxLength: 255
                },
                type: {
                    name: "String"
                }
            },
            autoSync: {
                serializedName: "properties.autoSync",
                type: {
                    name: "Boolean"
                }
            },
            publishRunbook: {
                serializedName: "properties.publishRunbook",
                type: {
                    name: "Boolean"
                }
            },
            sourceType: {
                serializedName: "properties.sourceType",
                type: {
                    name: "String"
                }
            },
            securityToken: {
                serializedName: "properties.securityToken",
                type: {
                    name: "Composite",
                    className: "SourceControlSecurityTokenProperties"
                }
            },
            description: {
                serializedName: "properties.description",
                constraints: {
                    MaxLength: 512
                },
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SourceControlSyncJob = {
    serializedName: "SourceControlSyncJob",
    type: {
        name: "Composite",
        className: "SourceControlSyncJob",
        modelProperties: {
            name: {
                readOnly: true,
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                readOnly: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            sourceControlSyncJobId: {
                serializedName: "properties.sourceControlSyncJobId",
                type: {
                    name: "String"
                }
            },
            creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            },
            provisioningState: {
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            },
            startTime: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            },
            syncType: {
                serializedName: "properties.syncType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SourceControlSyncJobCreateParameters = {
    serializedName: "SourceControlSyncJobCreateParameters",
    type: {
        name: "Composite",
        className: "SourceControlSyncJobCreateParameters",
        modelProperties: {
            commitId: {
                required: true,
                serializedName: "properties.commitId",
                constraints: {
                    MinLength: 0
                },
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SourceControlSyncJobById = {
    serializedName: "SourceControlSyncJobById",
    type: {
        name: "Composite",
        className: "SourceControlSyncJobById",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            sourceControlSyncJobId: {
                serializedName: "properties.sourceControlSyncJobId",
                type: {
                    name: "String"
                }
            },
            creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            },
            provisioningState: {
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            },
            startTime: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            },
            syncType: {
                serializedName: "properties.syncType",
                type: {
                    name: "String"
                }
            },
            exception: {
                serializedName: "properties.exception",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SourceControlSyncJobStream = {
    serializedName: "SourceControlSyncJobStream",
    type: {
        name: "Composite",
        className: "SourceControlSyncJobStream",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            sourceControlSyncJobStreamId: {
                serializedName: "properties.sourceControlSyncJobStreamId",
                type: {
                    name: "String"
                }
            },
            summary: {
                serializedName: "properties.summary",
                type: {
                    name: "String"
                }
            },
            time: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.time",
                type: {
                    name: "DateTime"
                }
            },
            streamType: {
                serializedName: "properties.streamType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SourceControlSyncJobStreamById = {
    serializedName: "SourceControlSyncJobStreamById",
    type: {
        name: "Composite",
        className: "SourceControlSyncJobStreamById",
        modelProperties: {
            id: {
                readOnly: true,
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            sourceControlSyncJobStreamId: {
                serializedName: "properties.sourceControlSyncJobStreamId",
                type: {
                    name: "String"
                }
            },
            summary: {
                serializedName: "properties.summary",
                type: {
                    name: "String"
                }
            },
            time: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.time",
                type: {
                    name: "DateTime"
                }
            },
            streamType: {
                serializedName: "properties.streamType",
                type: {
                    name: "String"
                }
            },
            streamText: {
                serializedName: "properties.streamText",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "properties.value",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Object"
                        }
                    }
                }
            }
        }
    }
};
export var JobStream = {
    serializedName: "JobStream",
    type: {
        name: "Composite",
        className: "JobStream",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            jobStreamId: {
                serializedName: "properties.jobStreamId",
                type: {
                    name: "String"
                }
            },
            time: {
                nullable: false,
                serializedName: "properties.time",
                type: {
                    name: "DateTime"
                }
            },
            streamType: {
                serializedName: "properties.streamType",
                type: {
                    name: "String"
                }
            },
            streamText: {
                serializedName: "properties.streamText",
                type: {
                    name: "String"
                }
            },
            summary: {
                serializedName: "properties.summary",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "properties.value",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Object"
                        }
                    }
                }
            }
        }
    }
};
export var Job = {
    serializedName: "Job",
    type: {
        name: "Composite",
        className: "Job",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { runbook: {
                serializedName: "properties.runbook",
                type: {
                    name: "Composite",
                    className: "RunbookAssociationProperty"
                }
            }, startedBy: {
                serializedName: "properties.startedBy",
                type: {
                    name: "String"
                }
            }, runOn: {
                serializedName: "properties.runOn",
                type: {
                    name: "String"
                }
            }, jobId: {
                nullable: false,
                serializedName: "properties.jobId",
                type: {
                    name: "Uuid"
                }
            }, creationTime: {
                nullable: false,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, status: {
                serializedName: "properties.status",
                type: {
                    name: "String"
                }
            }, statusDetails: {
                serializedName: "properties.statusDetails",
                type: {
                    name: "String"
                }
            }, startTime: {
                nullable: true,
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                nullable: true,
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            }, exception: {
                serializedName: "properties.exception",
                type: {
                    name: "String"
                }
            }, lastModifiedTime: {
                nullable: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, lastStatusModifiedTime: {
                nullable: true,
                serializedName: "properties.lastStatusModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, parameters: {
                serializedName: "properties.parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            } })
    }
};
export var JobCollectionItem = {
    serializedName: "JobCollectionItem",
    type: {
        name: "Composite",
        className: "JobCollectionItem",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { runbook: {
                readOnly: true,
                serializedName: "properties.runbook",
                type: {
                    name: "Composite",
                    className: "RunbookAssociationProperty"
                }
            }, jobId: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.jobId",
                type: {
                    name: "Uuid"
                }
            }, creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, status: {
                readOnly: true,
                serializedName: "properties.status",
                type: {
                    name: "String"
                }
            }, startTime: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, provisioningState: {
                readOnly: true,
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, runOn: {
                serializedName: "properties.runOn",
                type: {
                    name: "String"
                }
            } })
    }
};
export var JobCreateParameters = {
    serializedName: "JobCreateParameters",
    type: {
        name: "Composite",
        className: "JobCreateParameters",
        modelProperties: {
            runbook: {
                serializedName: "properties.runbook",
                type: {
                    name: "Composite",
                    className: "RunbookAssociationProperty"
                }
            },
            parameters: {
                serializedName: "properties.parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            runOn: {
                serializedName: "properties.runOn",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscReportError = {
    serializedName: "DscReportError",
    type: {
        name: "Composite",
        className: "DscReportError",
        modelProperties: {
            errorSource: {
                serializedName: "errorSource",
                type: {
                    name: "String"
                }
            },
            resourceId: {
                serializedName: "resourceId",
                type: {
                    name: "String"
                }
            },
            errorCode: {
                serializedName: "errorCode",
                type: {
                    name: "String"
                }
            },
            errorMessage: {
                serializedName: "errorMessage",
                type: {
                    name: "String"
                }
            },
            locale: {
                serializedName: "locale",
                type: {
                    name: "String"
                }
            },
            errorDetails: {
                serializedName: "errorDetails",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscReportResourceNavigation = {
    serializedName: "DscReportResourceNavigation",
    type: {
        name: "Composite",
        className: "DscReportResourceNavigation",
        modelProperties: {
            resourceId: {
                serializedName: "resourceId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscReportResource = {
    serializedName: "DscReportResource",
    type: {
        name: "Composite",
        className: "DscReportResource",
        modelProperties: {
            resourceId: {
                serializedName: "resourceId",
                type: {
                    name: "String"
                }
            },
            sourceInfo: {
                serializedName: "sourceInfo",
                type: {
                    name: "String"
                }
            },
            dependsOn: {
                serializedName: "dependsOn",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DscReportResourceNavigation"
                        }
                    }
                }
            },
            moduleName: {
                serializedName: "moduleName",
                type: {
                    name: "String"
                }
            },
            moduleVersion: {
                serializedName: "moduleVersion",
                type: {
                    name: "String"
                }
            },
            resourceName: {
                serializedName: "resourceName",
                type: {
                    name: "String"
                }
            },
            error: {
                serializedName: "error",
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            durationInSeconds: {
                serializedName: "durationInSeconds",
                type: {
                    name: "Number"
                }
            },
            startDate: {
                nullable: false,
                serializedName: "startDate",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export var DscMetaConfiguration = {
    serializedName: "DscMetaConfiguration",
    type: {
        name: "Composite",
        className: "DscMetaConfiguration",
        modelProperties: {
            configurationModeFrequencyMins: {
                serializedName: "configurationModeFrequencyMins",
                type: {
                    name: "Number"
                }
            },
            rebootNodeIfNeeded: {
                serializedName: "rebootNodeIfNeeded",
                type: {
                    name: "Boolean"
                }
            },
            configurationMode: {
                serializedName: "configurationMode",
                type: {
                    name: "String"
                }
            },
            actionAfterReboot: {
                serializedName: "actionAfterReboot",
                type: {
                    name: "String"
                }
            },
            certificateId: {
                serializedName: "certificateId",
                type: {
                    name: "String"
                }
            },
            refreshFrequencyMins: {
                serializedName: "refreshFrequencyMins",
                type: {
                    name: "Number"
                }
            },
            allowModuleOverwrite: {
                serializedName: "allowModuleOverwrite",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export var DscNodeReport = {
    serializedName: "DscNodeReport",
    type: {
        name: "Composite",
        className: "DscNodeReport",
        modelProperties: {
            endTime: {
                nullable: true,
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedTime: {
                nullable: false,
                serializedName: "lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            },
            startTime: {
                nullable: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            reportId: {
                serializedName: "reportId",
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            refreshMode: {
                serializedName: "refreshMode",
                type: {
                    name: "String"
                }
            },
            rebootRequested: {
                serializedName: "rebootRequested",
                type: {
                    name: "String"
                }
            },
            reportFormatVersion: {
                serializedName: "reportFormatVersion",
                type: {
                    name: "String"
                }
            },
            configurationVersion: {
                serializedName: "configurationVersion",
                type: {
                    name: "String"
                }
            },
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            },
            errors: {
                serializedName: "errors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DscReportError"
                        }
                    }
                }
            },
            resources: {
                serializedName: "resources",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DscReportResource"
                        }
                    }
                }
            },
            metaConfiguration: {
                serializedName: "metaConfiguration",
                type: {
                    name: "Composite",
                    className: "DscMetaConfiguration"
                }
            },
            hostName: {
                serializedName: "hostName",
                type: {
                    name: "String"
                }
            },
            iPV4Addresses: {
                serializedName: "iPV4Addresses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            iPV6Addresses: {
                serializedName: "iPV6Addresses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            numberOfResources: {
                serializedName: "numberOfResources",
                type: {
                    name: "Number"
                }
            },
            rawErrors: {
                serializedName: "rawErrors",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AgentRegistrationKeys = {
    serializedName: "AgentRegistrationKeys",
    type: {
        name: "Composite",
        className: "AgentRegistrationKeys",
        modelProperties: {
            primary: {
                serializedName: "primary",
                type: {
                    name: "String"
                }
            },
            secondary: {
                serializedName: "secondary",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AgentRegistration = {
    serializedName: "AgentRegistration",
    type: {
        name: "Composite",
        className: "AgentRegistration",
        modelProperties: {
            dscMetaConfiguration: {
                serializedName: "dscMetaConfiguration",
                type: {
                    name: "String"
                }
            },
            endpoint: {
                serializedName: "endpoint",
                type: {
                    name: "String"
                }
            },
            keys: {
                serializedName: "keys",
                type: {
                    name: "Composite",
                    className: "AgentRegistrationKeys"
                }
            },
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscNodeExtensionHandlerAssociationProperty = {
    serializedName: "DscNodeExtensionHandlerAssociationProperty",
    type: {
        name: "Composite",
        className: "DscNodeExtensionHandlerAssociationProperty",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "version",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscNode = {
    serializedName: "DscNode",
    type: {
        name: "Composite",
        className: "DscNode",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { lastSeen: {
                nullable: false,
                serializedName: "properties.lastSeen",
                type: {
                    name: "DateTime"
                }
            }, registrationTime: {
                nullable: false,
                serializedName: "properties.registrationTime",
                type: {
                    name: "DateTime"
                }
            }, ip: {
                serializedName: "properties.ip",
                type: {
                    name: "String"
                }
            }, accountId: {
                serializedName: "properties.accountId",
                type: {
                    name: "String"
                }
            }, dscNodeName: {
                serializedName: "properties.nodeConfiguration.name",
                type: {
                    name: "String"
                }
            }, status: {
                serializedName: "properties.status",
                type: {
                    name: "String"
                }
            }, nodeId: {
                serializedName: "properties.nodeId",
                type: {
                    name: "String"
                }
            }, etag: {
                serializedName: "properties.etag",
                type: {
                    name: "String"
                }
            }, totalCount: {
                serializedName: "properties.totalCount",
                type: {
                    name: "Number"
                }
            }, extensionHandler: {
                serializedName: "properties.extensionHandler",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DscNodeExtensionHandlerAssociationProperty"
                        }
                    }
                }
            } })
    }
};
export var AgentRegistrationRegenerateKeyParameter = {
    serializedName: "AgentRegistrationRegenerateKeyParameter",
    type: {
        name: "Composite",
        className: "AgentRegistrationRegenerateKeyParameter",
        modelProperties: {
            keyName: {
                required: true,
                serializedName: "keyName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscNodeUpdateParametersProperties = {
    serializedName: "DscNodeUpdateParameters_properties",
    type: {
        name: "Composite",
        className: "DscNodeUpdateParametersProperties",
        modelProperties: {
            name: {
                serializedName: "nodeConfiguration.name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscNodeUpdateParameters = {
    serializedName: "DscNodeUpdateParameters",
    type: {
        name: "Composite",
        className: "DscNodeUpdateParameters",
        modelProperties: {
            nodeId: {
                serializedName: "nodeId",
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "DscNodeUpdateParametersProperties"
                }
            }
        }
    }
};
export var DscConfigurationAssociationProperty = {
    serializedName: "DscConfigurationAssociationProperty",
    type: {
        name: "Composite",
        className: "DscConfigurationAssociationProperty",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscCompilationJob = {
    serializedName: "DscCompilationJob",
    type: {
        name: "Composite",
        className: "DscCompilationJob",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { configuration: {
                serializedName: "properties.configuration",
                type: {
                    name: "Composite",
                    className: "DscConfigurationAssociationProperty"
                }
            }, startedBy: {
                readOnly: true,
                serializedName: "properties.startedBy",
                type: {
                    name: "String"
                }
            }, jobId: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.jobId",
                type: {
                    name: "Uuid"
                }
            }, creationTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                type: {
                    name: "String"
                }
            }, runOn: {
                serializedName: "properties.runOn",
                type: {
                    name: "String"
                }
            }, status: {
                serializedName: "properties.status",
                type: {
                    name: "String"
                }
            }, statusDetails: {
                serializedName: "properties.statusDetails",
                type: {
                    name: "String"
                }
            }, startTime: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.startTime",
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.endTime",
                type: {
                    name: "DateTime"
                }
            }, exception: {
                readOnly: true,
                serializedName: "properties.exception",
                type: {
                    name: "String"
                }
            }, lastModifiedTime: {
                nullable: false,
                readOnly: true,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, lastStatusModifiedTime: {
                nullable: true,
                readOnly: true,
                serializedName: "properties.lastStatusModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, parameters: {
                serializedName: "properties.parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export var DscCompilationJobCreateParameters = {
    serializedName: "DscCompilationJobCreateParameters",
    type: {
        name: "Composite",
        className: "DscCompilationJobCreateParameters",
        modelProperties: {
            configuration: {
                required: true,
                serializedName: "properties.configuration",
                type: {
                    name: "Composite",
                    className: "DscConfigurationAssociationProperty"
                }
            },
            parameters: {
                serializedName: "properties.parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            incrementNodeConfigurationBuild: {
                serializedName: "properties.incrementNodeConfigurationBuild",
                type: {
                    name: "Boolean"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var DscNodeConfiguration = {
    serializedName: "DscNodeConfiguration",
    type: {
        name: "Composite",
        className: "DscNodeConfiguration",
        modelProperties: __assign(__assign({}, ProxyResource.type.modelProperties), { lastModifiedTime: {
                nullable: false,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, creationTime: {
                nullable: false,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, configuration: {
                serializedName: "properties.configuration",
                type: {
                    name: "Composite",
                    className: "DscConfigurationAssociationProperty"
                }
            }, source: {
                serializedName: "properties.source",
                type: {
                    name: "String"
                }
            }, nodeCount: {
                serializedName: "properties.nodeCount",
                type: {
                    name: "Number"
                }
            }, incrementNodeConfigurationBuild: {
                serializedName: "properties.incrementNodeConfigurationBuild",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export var DscNodeConfigurationCreateOrUpdateParameters = {
    serializedName: "DscNodeConfigurationCreateOrUpdateParameters",
    type: {
        name: "Composite",
        className: "DscNodeConfigurationCreateOrUpdateParameters",
        modelProperties: {
            source: {
                required: true,
                serializedName: "properties.source",
                type: {
                    name: "Composite",
                    className: "ContentSource"
                }
            },
            configuration: {
                required: true,
                serializedName: "properties.configuration",
                type: {
                    name: "Composite",
                    className: "DscConfigurationAssociationProperty"
                }
            },
            incrementNodeConfigurationBuild: {
                serializedName: "properties.incrementNodeConfigurationBuild",
                type: {
                    name: "Boolean"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var NodeCountProperties = {
    serializedName: "NodeCountProperties",
    type: {
        name: "Composite",
        className: "NodeCountProperties",
        modelProperties: {
            count: {
                serializedName: "count",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var NodeCount = {
    serializedName: "NodeCount",
    type: {
        name: "Composite",
        className: "NodeCount",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "NodeCountProperties"
                }
            }
        }
    }
};
export var NodeCounts = {
    serializedName: "NodeCounts",
    type: {
        name: "Composite",
        className: "NodeCounts",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "NodeCount"
                        }
                    }
                }
            },
            totalCount: {
                serializedName: "totalCount",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var RunbookParameter = {
    serializedName: "RunbookParameter",
    type: {
        name: "Composite",
        className: "RunbookParameter",
        modelProperties: {
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            isMandatory: {
                serializedName: "isMandatory",
                type: {
                    name: "Boolean"
                }
            },
            position: {
                serializedName: "position",
                type: {
                    name: "Number"
                }
            },
            defaultValue: {
                serializedName: "defaultValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RunbookDraft = {
    serializedName: "RunbookDraft",
    type: {
        name: "Composite",
        className: "RunbookDraft",
        modelProperties: {
            inEdit: {
                serializedName: "inEdit",
                type: {
                    name: "Boolean"
                }
            },
            draftContentLink: {
                serializedName: "draftContentLink",
                type: {
                    name: "Composite",
                    className: "ContentLink"
                }
            },
            creationTime: {
                nullable: false,
                serializedName: "creationTime",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedTime: {
                nullable: false,
                serializedName: "lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "RunbookParameter"
                        }
                    }
                }
            },
            outputTypes: {
                serializedName: "outputTypes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var Runbook = {
    serializedName: "Runbook",
    type: {
        name: "Composite",
        className: "Runbook",
        modelProperties: __assign(__assign({}, TrackedResource.type.modelProperties), { runbookType: {
                serializedName: "properties.runbookType",
                type: {
                    name: "String"
                }
            }, publishContentLink: {
                serializedName: "properties.publishContentLink",
                type: {
                    name: "Composite",
                    className: "ContentLink"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            }, logVerbose: {
                serializedName: "properties.logVerbose",
                type: {
                    name: "Boolean"
                }
            }, logProgress: {
                serializedName: "properties.logProgress",
                type: {
                    name: "Boolean"
                }
            }, logActivityTrace: {
                serializedName: "properties.logActivityTrace",
                type: {
                    name: "Number"
                }
            }, jobCount: {
                serializedName: "properties.jobCount",
                type: {
                    name: "Number"
                }
            }, parameters: {
                serializedName: "properties.parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "RunbookParameter"
                        }
                    }
                }
            }, outputTypes: {
                serializedName: "properties.outputTypes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, draft: {
                serializedName: "properties.draft",
                type: {
                    name: "Composite",
                    className: "RunbookDraft"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Succeeded"
                    ]
                }
            }, lastModifiedBy: {
                serializedName: "properties.lastModifiedBy",
                type: {
                    name: "String"
                }
            }, creationTime: {
                nullable: false,
                serializedName: "properties.creationTime",
                type: {
                    name: "DateTime"
                }
            }, lastModifiedTime: {
                nullable: false,
                serializedName: "properties.lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            }, description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, etag: {
                serializedName: "etag",
                type: {
                    name: "String"
                }
            } })
    }
};
export var RunbookCreateOrUpdateParameters = {
    serializedName: "RunbookCreateOrUpdateParameters",
    type: {
        name: "Composite",
        className: "RunbookCreateOrUpdateParameters",
        modelProperties: {
            logVerbose: {
                serializedName: "properties.logVerbose",
                type: {
                    name: "Boolean"
                }
            },
            logProgress: {
                serializedName: "properties.logProgress",
                type: {
                    name: "Boolean"
                }
            },
            runbookType: {
                required: true,
                serializedName: "properties.runbookType",
                type: {
                    name: "String"
                }
            },
            draft: {
                serializedName: "properties.draft",
                type: {
                    name: "Composite",
                    className: "RunbookDraft"
                }
            },
            publishContentLink: {
                serializedName: "properties.publishContentLink",
                type: {
                    name: "Composite",
                    className: "ContentLink"
                }
            },
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            },
            logActivityTrace: {
                serializedName: "properties.logActivityTrace",
                type: {
                    name: "Number"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var RunbookUpdateParameters = {
    serializedName: "RunbookUpdateParameters",
    type: {
        name: "Composite",
        className: "RunbookUpdateParameters",
        modelProperties: {
            description: {
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            },
            logVerbose: {
                serializedName: "properties.logVerbose",
                type: {
                    name: "Boolean"
                }
            },
            logProgress: {
                serializedName: "properties.logProgress",
                type: {
                    name: "Boolean"
                }
            },
            logActivityTrace: {
                serializedName: "properties.logActivityTrace",
                type: {
                    name: "Number"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var RunbookDraftUndoEditResult = {
    serializedName: "RunbookDraftUndoEditResult",
    type: {
        name: "Composite",
        className: "RunbookDraftUndoEditResult",
        modelProperties: {
            statusCode: {
                serializedName: "statusCode",
                type: {
                    name: "String"
                }
            },
            requestId: {
                serializedName: "requestId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TestJobCreateParameters = {
    serializedName: "TestJobCreateParameters",
    type: {
        name: "Composite",
        className: "TestJobCreateParameters",
        modelProperties: {
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            runOn: {
                serializedName: "runOn",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TestJob = {
    serializedName: "TestJob",
    type: {
        name: "Composite",
        className: "TestJob",
        modelProperties: {
            creationTime: {
                nullable: false,
                serializedName: "creationTime",
                type: {
                    name: "DateTime"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            },
            statusDetails: {
                serializedName: "statusDetails",
                type: {
                    name: "String"
                }
            },
            runOn: {
                serializedName: "runOn",
                type: {
                    name: "String"
                }
            },
            startTime: {
                nullable: true,
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                nullable: true,
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            exception: {
                serializedName: "exception",
                type: {
                    name: "String"
                }
            },
            lastModifiedTime: {
                nullable: false,
                serializedName: "lastModifiedTime",
                type: {
                    name: "DateTime"
                }
            },
            lastStatusModifiedTime: {
                nullable: true,
                serializedName: "lastStatusModifiedTime",
                type: {
                    name: "DateTime"
                }
            },
            parameters: {
                serializedName: "parameters",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            logActivityTrace: {
                serializedName: "logActivityTrace",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var RunbookCreateOrUpdateDraftProperties = {
    serializedName: "RunbookCreateOrUpdateDraftProperties",
    type: {
        name: "Composite",
        className: "RunbookCreateOrUpdateDraftProperties",
        modelProperties: {
            logVerbose: {
                serializedName: "logVerbose",
                type: {
                    name: "Boolean"
                }
            },
            logProgress: {
                serializedName: "logProgress",
                type: {
                    name: "Boolean"
                }
            },
            runbookType: {
                required: true,
                serializedName: "runbookType",
                type: {
                    name: "String"
                }
            },
            draft: {
                required: true,
                serializedName: "draft",
                type: {
                    name: "Composite",
                    className: "RunbookDraft"
                }
            },
            description: {
                serializedName: "description",
                type: {
                    name: "String"
                }
            },
            logActivityTrace: {
                serializedName: "logActivityTrace",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var RunbookCreateOrUpdateDraftParameters = {
    serializedName: "RunbookCreateOrUpdateDraftParameters",
    type: {
        name: "Composite",
        className: "RunbookCreateOrUpdateDraftParameters",
        modelProperties: {
            runbookContent: {
                required: true,
                serializedName: "runbookContent",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var PythonPackageCreateParameters = {
    serializedName: "PythonPackageCreateParameters",
    type: {
        name: "Composite",
        className: "PythonPackageCreateParameters",
        modelProperties: {
            contentLink: {
                required: true,
                serializedName: "properties.contentLink",
                type: {
                    name: "Composite",
                    className: "ContentLink"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var PythonPackageUpdateParameters = {
    serializedName: "PythonPackageUpdateParameters",
    type: {
        name: "Composite",
        className: "PythonPackageUpdateParameters",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export var RunbookDraftReplaceContentHeaders = {
    serializedName: "runbookdraft-replacecontent-headers",
    type: {
        name: "Composite",
        className: "RunbookDraftReplaceContentHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var RunbookPublishHeaders = {
    serializedName: "runbook-publish-headers",
    type: {
        name: "Composite",
        className: "RunbookPublishHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var AutomationAccountListResult = {
    serializedName: "AutomationAccountListResult",
    type: {
        name: "Composite",
        className: "AutomationAccountListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AutomationAccount"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var OperationListResult = {
    serializedName: "OperationListResult",
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            }
        }
    }
};
export var StatisticsListResult = {
    serializedName: "StatisticsListResult",
    type: {
        name: "Composite",
        className: "StatisticsListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Statistics"
                        }
                    }
                }
            }
        }
    }
};
export var UsageListResult = {
    serializedName: "UsageListResult",
    type: {
        name: "Composite",
        className: "UsageListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Usage"
                        }
                    }
                }
            }
        }
    }
};
export var CertificateListResult = {
    serializedName: "CertificateListResult",
    type: {
        name: "Composite",
        className: "CertificateListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Certificate"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ConnectionListResult = {
    serializedName: "ConnectionListResult",
    type: {
        name: "Composite",
        className: "ConnectionListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Connection"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ConnectionTypeListResult = {
    serializedName: "ConnectionTypeListResult",
    type: {
        name: "Composite",
        className: "ConnectionTypeListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ConnectionType"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var CredentialListResult = {
    serializedName: "CredentialListResult",
    type: {
        name: "Composite",
        className: "CredentialListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Credential"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscConfigurationListResult = {
    serializedName: "DscConfigurationListResult",
    type: {
        name: "Composite",
        className: "DscConfigurationListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DscConfiguration"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            },
            totalCount: {
                serializedName: "totalCount",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var HybridRunbookWorkerGroupsListResult = {
    serializedName: "HybridRunbookWorkerGroupsListResult",
    type: {
        name: "Composite",
        className: "HybridRunbookWorkerGroupsListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HybridRunbookWorkerGroup"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var JobScheduleListResult = {
    serializedName: "JobScheduleListResult",
    type: {
        name: "Composite",
        className: "JobScheduleListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "JobSchedule"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ActivityListResult = {
    serializedName: "ActivityListResult",
    type: {
        name: "Composite",
        className: "ActivityListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Activity"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var ModuleListResult = {
    serializedName: "ModuleListResult",
    type: {
        name: "Composite",
        className: "ModuleListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Module"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var TypeFieldListResult = {
    serializedName: "TypeFieldListResult",
    type: {
        name: "Composite",
        className: "TypeFieldListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TypeField"
                        }
                    }
                }
            }
        }
    }
};
export var ScheduleListResult = {
    serializedName: "ScheduleListResult",
    type: {
        name: "Composite",
        className: "ScheduleListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Schedule"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var VariableListResult = {
    serializedName: "VariableListResult",
    type: {
        name: "Composite",
        className: "VariableListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Variable"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var WebhookListResult = {
    serializedName: "WebhookListResult",
    type: {
        name: "Composite",
        className: "WebhookListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Webhook"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var WatcherListResult = {
    serializedName: "WatcherListResult",
    type: {
        name: "Composite",
        className: "WatcherListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Watcher"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SourceControlListResult = {
    serializedName: "SourceControlListResult",
    type: {
        name: "Composite",
        className: "SourceControlListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SourceControl"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SourceControlSyncJobListResult = {
    serializedName: "SourceControlSyncJobListResult",
    type: {
        name: "Composite",
        className: "SourceControlSyncJobListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SourceControlSyncJob"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var SourceControlSyncJobStreamsListBySyncJob = {
    serializedName: "SourceControlSyncJobStreamsListBySyncJob",
    type: {
        name: "Composite",
        className: "SourceControlSyncJobStreamsListBySyncJob",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SourceControlSyncJobStream"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var JobListResultV2 = {
    serializedName: "JobListResultV2",
    type: {
        name: "Composite",
        className: "JobListResultV2",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "JobCollectionItem"
                        }
                    }
                }
            },
            nextLink: {
                readOnly: true,
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var JobStreamListResult = {
    serializedName: "JobStreamListResult",
    type: {
        name: "Composite",
        className: "JobStreamListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "JobStream"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscNodeListResult = {
    serializedName: "DscNodeListResult",
    type: {
        name: "Composite",
        className: "DscNodeListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DscNode"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            },
            totalCount: {
                serializedName: "totalCount",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var DscNodeReportListResult = {
    serializedName: "DscNodeReportListResult",
    type: {
        name: "Composite",
        className: "DscNodeReportListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DscNodeReport"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscCompilationJobListResult = {
    serializedName: "DscCompilationJobListResult",
    type: {
        name: "Composite",
        className: "DscCompilationJobListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DscCompilationJob"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export var DscNodeConfigurationListResult = {
    serializedName: "DscNodeConfigurationListResult",
    type: {
        name: "Composite",
        className: "DscNodeConfigurationListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DscNodeConfiguration"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            },
            totalCount: {
                serializedName: "totalCount",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export var RunbookListResult = {
    serializedName: "RunbookListResult",
    type: {
        name: "Composite",
        className: "RunbookListResult",
        modelProperties: {
            value: {
                serializedName: "",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Runbook"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map