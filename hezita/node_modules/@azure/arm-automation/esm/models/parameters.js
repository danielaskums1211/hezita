/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
export var acceptLanguage = {
    parameterPath: "acceptLanguage",
    mapper: {
        serializedName: "accept-language",
        defaultValue: 'en-US',
        type: {
            name: "String"
        }
    }
};
export var activityName = {
    parameterPath: "activityName",
    mapper: {
        required: true,
        serializedName: "activityName",
        type: {
            name: "String"
        }
    }
};
export var apiVersion0 = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "api-version",
        defaultValue: '2015-10-31',
        type: {
            name: "String"
        }
    }
};
export var apiVersion1 = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "api-version",
        defaultValue: '2017-05-15-preview',
        type: {
            name: "String"
        }
    }
};
export var apiVersion2 = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "api-version",
        defaultValue: '2018-01-15',
        type: {
            name: "String"
        }
    }
};
export var apiVersion3 = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        isConstant: true,
        serializedName: "api-version",
        defaultValue: '2018-06-30',
        type: {
            name: "String"
        }
    }
};
export var automationAccountName = {
    parameterPath: "automationAccountName",
    mapper: {
        required: true,
        serializedName: "automationAccountName",
        type: {
            name: "String"
        }
    }
};
export var certificateName = {
    parameterPath: "certificateName",
    mapper: {
        required: true,
        serializedName: "certificateName",
        type: {
            name: "String"
        }
    }
};
export var clientRequestId = {
    parameterPath: [
        "options",
        "clientRequestId"
    ],
    mapper: {
        serializedName: "clientRequestId",
        type: {
            name: "String"
        }
    }
};
export var compilationJobName = {
    parameterPath: "compilationJobName",
    mapper: {
        required: true,
        serializedName: "compilationJobName",
        type: {
            name: "String"
        }
    }
};
export var configurationName = {
    parameterPath: "configurationName",
    mapper: {
        required: true,
        serializedName: "configurationName",
        type: {
            name: "String"
        }
    }
};
export var connectionName = {
    parameterPath: "connectionName",
    mapper: {
        required: true,
        serializedName: "connectionName",
        type: {
            name: "String"
        }
    }
};
export var connectionTypeName = {
    parameterPath: "connectionTypeName",
    mapper: {
        required: true,
        serializedName: "connectionTypeName",
        type: {
            name: "String"
        }
    }
};
export var countType = {
    parameterPath: "countType",
    mapper: {
        required: true,
        serializedName: "countType",
        type: {
            name: "String"
        }
    }
};
export var credentialName = {
    parameterPath: "credentialName",
    mapper: {
        required: true,
        serializedName: "credentialName",
        type: {
            name: "String"
        }
    }
};
export var filter = {
    parameterPath: [
        "options",
        "filter"
    ],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String"
        }
    }
};
export var hybridRunbookWorkerGroupName = {
    parameterPath: "hybridRunbookWorkerGroupName",
    mapper: {
        required: true,
        serializedName: "hybridRunbookWorkerGroupName",
        type: {
            name: "String"
        }
    }
};
export var inlinecount = {
    parameterPath: [
        "options",
        "inlinecount"
    ],
    mapper: {
        serializedName: "$inlinecount",
        type: {
            name: "String"
        }
    }
};
export var jobId = {
    parameterPath: "jobId",
    mapper: {
        required: true,
        serializedName: "jobId",
        type: {
            name: "Uuid"
        }
    }
};
export var jobName = {
    parameterPath: "jobName",
    mapper: {
        required: true,
        serializedName: "jobName",
        type: {
            name: "String"
        }
    }
};
export var jobScheduleId = {
    parameterPath: "jobScheduleId",
    mapper: {
        required: true,
        serializedName: "jobScheduleId",
        type: {
            name: "Uuid"
        }
    }
};
export var jobStreamId = {
    parameterPath: "jobStreamId",
    mapper: {
        required: true,
        serializedName: "jobStreamId",
        type: {
            name: "String"
        }
    }
};
export var moduleName = {
    parameterPath: "moduleName",
    mapper: {
        required: true,
        serializedName: "moduleName",
        type: {
            name: "String"
        }
    }
};
export var nextPageLink = {
    parameterPath: "nextPageLink",
    mapper: {
        required: true,
        serializedName: "nextLink",
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export var nodeConfigurationName = {
    parameterPath: "nodeConfigurationName",
    mapper: {
        required: true,
        serializedName: "nodeConfigurationName",
        type: {
            name: "String"
        }
    }
};
export var nodeId = {
    parameterPath: "nodeId",
    mapper: {
        required: true,
        serializedName: "nodeId",
        type: {
            name: "String"
        }
    }
};
export var packageName = {
    parameterPath: "packageName",
    mapper: {
        required: true,
        serializedName: "packageName",
        type: {
            name: "String"
        }
    }
};
export var reportId = {
    parameterPath: "reportId",
    mapper: {
        required: true,
        serializedName: "reportId",
        type: {
            name: "String"
        }
    }
};
export var resourceGroupName = {
    parameterPath: "resourceGroupName",
    mapper: {
        required: true,
        serializedName: "resourceGroupName",
        constraints: {
            MaxLength: 90,
            MinLength: 1,
            Pattern: /^[-\w\._]+$/
        },
        type: {
            name: "String"
        }
    }
};
export var runbookName = {
    parameterPath: "runbookName",
    mapper: {
        required: true,
        serializedName: "runbookName",
        type: {
            name: "String"
        }
    }
};
export var scheduleName = {
    parameterPath: "scheduleName",
    mapper: {
        required: true,
        serializedName: "scheduleName",
        type: {
            name: "String"
        }
    }
};
export var skip0 = {
    parameterPath: [
        "options",
        "skip"
    ],
    mapper: {
        serializedName: "$skip",
        type: {
            name: "Number"
        }
    }
};
export var skip1 = {
    parameterPath: [
        "options",
        "skip"
    ],
    mapper: {
        serializedName: "$skip",
        type: {
            name: "String"
        }
    }
};
export var softwareUpdateConfigurationMachineRunId = {
    parameterPath: "softwareUpdateConfigurationMachineRunId",
    mapper: {
        required: true,
        serializedName: "softwareUpdateConfigurationMachineRunId",
        type: {
            name: "Uuid"
        }
    }
};
export var softwareUpdateConfigurationName = {
    parameterPath: "softwareUpdateConfigurationName",
    mapper: {
        required: true,
        serializedName: "softwareUpdateConfigurationName",
        type: {
            name: "String"
        }
    }
};
export var softwareUpdateConfigurationRunId = {
    parameterPath: "softwareUpdateConfigurationRunId",
    mapper: {
        required: true,
        serializedName: "softwareUpdateConfigurationRunId",
        type: {
            name: "Uuid"
        }
    }
};
export var sourceControlName = {
    parameterPath: "sourceControlName",
    mapper: {
        required: true,
        serializedName: "sourceControlName",
        type: {
            name: "String"
        }
    }
};
export var sourceControlSyncJobId = {
    parameterPath: "sourceControlSyncJobId",
    mapper: {
        required: true,
        serializedName: "sourceControlSyncJobId",
        type: {
            name: "Uuid"
        }
    }
};
export var streamId = {
    parameterPath: "streamId",
    mapper: {
        required: true,
        serializedName: "streamId",
        type: {
            name: "String"
        }
    }
};
export var subscriptionId = {
    parameterPath: "subscriptionId",
    mapper: {
        required: true,
        serializedName: "subscriptionId",
        type: {
            name: "String"
        }
    }
};
export var top0 = {
    parameterPath: [
        "options",
        "top"
    ],
    mapper: {
        serializedName: "$top",
        type: {
            name: "Number"
        }
    }
};
export var top1 = {
    parameterPath: [
        "options",
        "top"
    ],
    mapper: {
        serializedName: "$top",
        type: {
            name: "String"
        }
    }
};
export var typeName = {
    parameterPath: "typeName",
    mapper: {
        required: true,
        serializedName: "typeName",
        type: {
            name: "String"
        }
    }
};
export var variableName = {
    parameterPath: "variableName",
    mapper: {
        required: true,
        serializedName: "variableName",
        type: {
            name: "String"
        }
    }
};
export var watcherName = {
    parameterPath: "watcherName",
    mapper: {
        required: true,
        serializedName: "watcherName",
        type: {
            name: "String"
        }
    }
};
export var webhookName = {
    parameterPath: "webhookName",
    mapper: {
        required: true,
        serializedName: "webhookName",
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map