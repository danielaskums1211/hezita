import * as msRest from "@azure/ms-rest-js";
import { TokenCredential } from "@azure/core-auth";
import * as Models from "./models";
import * as Mappers from "./models/mappers";
import * as operations from "./operations";
import { AutomationClientContext } from "./automationClientContext";
declare class AutomationClient extends AutomationClientContext {
    automationAccount: operations.AutomationAccountOperations;
    operations: operations.Operations;
    statistics: operations.StatisticsOperations;
    usages: operations.Usages;
    keys: operations.Keys;
    certificate: operations.CertificateOperations;
    connection: operations.ConnectionOperations;
    connectionType: operations.ConnectionTypeOperations;
    credential: operations.CredentialOperations;
    dscConfiguration: operations.DscConfigurationOperations;
    hybridRunbookWorkerGroup: operations.HybridRunbookWorkerGroupOperations;
    jobSchedule: operations.JobScheduleOperations;
    linkedWorkspace: operations.LinkedWorkspaceOperations;
    activity: operations.ActivityOperations;
    module: operations.ModuleOperations;
    objectDataTypes: operations.ObjectDataTypes;
    fields: operations.Fields;
    schedule: operations.ScheduleOperations;
    variable: operations.VariableOperations;
    webhook: operations.WebhookOperations;
    watcher: operations.WatcherOperations;
    softwareUpdateConfigurations: operations.SoftwareUpdateConfigurations;
    softwareUpdateConfigurationRuns: operations.SoftwareUpdateConfigurationRuns;
    softwareUpdateConfigurationMachineRuns: operations.SoftwareUpdateConfigurationMachineRuns;
    sourceControl: operations.SourceControlOperations;
    sourceControlSyncJob: operations.SourceControlSyncJobOperations;
    sourceControlSyncJobStreams: operations.SourceControlSyncJobStreams;
    job: operations.JobOperations;
    jobStream: operations.JobStreamOperations;
    agentRegistrationInformation: operations.AgentRegistrationInformation;
    dscNode: operations.DscNodeOperations;
    nodeReports: operations.NodeReports;
    dscCompilationJob: operations.DscCompilationJobOperations;
    dscCompilationJobStream: operations.DscCompilationJobStream;
    dscNodeConfiguration: operations.DscNodeConfigurationOperations;
    nodeCountInformation: operations.NodeCountInformation;
    runbookDraft: operations.RunbookDraftOperations;
    runbook: operations.RunbookOperations;
    testJobStreams: operations.TestJobStreams;
    testJob: operations.TestJobOperations;
    python2Package: operations.Python2Package;
    /**
     * Initializes a new instance of the AutomationClient class.
     * @param credentials Credentials needed for the client to connect to Azure. Credentials
     * implementing the TokenCredential interface from the @azure/identity package are recommended. For
     * more information about these credentials, see
     * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the
     * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and
     * @azure/ms-rest-browserauth are also supported.
     * @param subscriptionId Gets subscription credentials which uniquely identify Microsoft Azure
     * subscription. The subscription ID forms part of the URI for every service call.
     * @param countType1 The type of counts to retrieve. Possible values include: 'status',
     * 'nodeconfiguration'
     * @param [options] The parameter options
     */
    constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, countType1: Models.CountType, options?: Models.AutomationClientOptions);
}
export { AutomationClient, AutomationClientContext, Models as AutomationModels, Mappers as AutomationMappers };
export * from "./operations";
//# sourceMappingURL=automationClient.d.ts.map