import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { AutomationClientContext } from "../automationClientContext";
/** Class representing a SoftwareUpdateConfigurationMachineRuns. */
export declare class SoftwareUpdateConfigurationMachineRuns {
    private readonly client;
    /**
     * Create a SoftwareUpdateConfigurationMachineRuns.
     * @param {AutomationClientContext} client Reference to the service client.
     */
    constructor(client: AutomationClientContext);
    /**
     * Get a single software update configuration machine run by Id.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param softwareUpdateConfigurationMachineRunId The Id of the software update configuration
     * machine run.
     * @param [options] The optional parameters
     * @returns Promise<Models.SoftwareUpdateConfigurationMachineRunsGetByIdResponse>
     */
    getById(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationMachineRunId: string, options?: Models.SoftwareUpdateConfigurationMachineRunsGetByIdOptionalParams): Promise<Models.SoftwareUpdateConfigurationMachineRunsGetByIdResponse>;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param softwareUpdateConfigurationMachineRunId The Id of the software update configuration
     * machine run.
     * @param callback The callback
     */
    getById(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationMachineRunId: string, callback: msRest.ServiceCallback<Models.SoftwareUpdateConfigurationMachineRun>): void;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param softwareUpdateConfigurationMachineRunId The Id of the software update configuration
     * machine run.
     * @param options The optional parameters
     * @param callback The callback
     */
    getById(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationMachineRunId: string, options: Models.SoftwareUpdateConfigurationMachineRunsGetByIdOptionalParams, callback: msRest.ServiceCallback<Models.SoftwareUpdateConfigurationMachineRun>): void;
    /**
     * Return list of software update configuration machine runs
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param [options] The optional parameters
     * @returns Promise<Models.SoftwareUpdateConfigurationMachineRunsListResponse>
     */
    list(resourceGroupName: string, automationAccountName: string, options?: Models.SoftwareUpdateConfigurationMachineRunsListOptionalParams): Promise<Models.SoftwareUpdateConfigurationMachineRunsListResponse>;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param callback The callback
     */
    list(resourceGroupName: string, automationAccountName: string, callback: msRest.ServiceCallback<Models.SoftwareUpdateConfigurationMachineRunListResult>): void;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroupName: string, automationAccountName: string, options: Models.SoftwareUpdateConfigurationMachineRunsListOptionalParams, callback: msRest.ServiceCallback<Models.SoftwareUpdateConfigurationMachineRunListResult>): void;
}
//# sourceMappingURL=softwareUpdateConfigurationMachineRuns.d.ts.map