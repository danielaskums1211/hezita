import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { AutomationClientContext } from "../automationClientContext";
/** Class representing a DscCompilationJobStream. */
export declare class DscCompilationJobStream {
    private readonly client;
    /**
     * Create a DscCompilationJobStream.
     * @param {AutomationClientContext} client Reference to the service client.
     */
    constructor(client: AutomationClientContext);
    /**
     * Retrieve all the job streams for the compilation Job.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param jobId The job id.
     * @param [options] The optional parameters
     * @returns Promise<Models.DscCompilationJobStreamListByJobResponse>
     */
    listByJob(resourceGroupName: string, automationAccountName: string, jobId: string, options?: msRest.RequestOptionsBase): Promise<Models.DscCompilationJobStreamListByJobResponse>;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param jobId The job id.
     * @param callback The callback
     */
    listByJob(resourceGroupName: string, automationAccountName: string, jobId: string, callback: msRest.ServiceCallback<Models.JobStreamListResult>): void;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param jobId The job id.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByJob(resourceGroupName: string, automationAccountName: string, jobId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.JobStreamListResult>): void;
}
//# sourceMappingURL=dscCompilationJobStream.d.ts.map