import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { AutomationClientContext } from "../automationClientContext";
/** Class representing a SoftwareUpdateConfigurationRuns. */
export declare class SoftwareUpdateConfigurationRuns {
    private readonly client;
    /**
     * Create a SoftwareUpdateConfigurationRuns.
     * @param {AutomationClientContext} client Reference to the service client.
     */
    constructor(client: AutomationClientContext);
    /**
     * Get a single software update configuration Run by Id.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param softwareUpdateConfigurationRunId The Id of the software update configuration run.
     * @param [options] The optional parameters
     * @returns Promise<Models.SoftwareUpdateConfigurationRunsGetByIdResponse>
     */
    getById(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationRunId: string, options?: Models.SoftwareUpdateConfigurationRunsGetByIdOptionalParams): Promise<Models.SoftwareUpdateConfigurationRunsGetByIdResponse>;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param softwareUpdateConfigurationRunId The Id of the software update configuration run.
     * @param callback The callback
     */
    getById(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationRunId: string, callback: msRest.ServiceCallback<Models.SoftwareUpdateConfigurationRun>): void;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param softwareUpdateConfigurationRunId The Id of the software update configuration run.
     * @param options The optional parameters
     * @param callback The callback
     */
    getById(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationRunId: string, options: Models.SoftwareUpdateConfigurationRunsGetByIdOptionalParams, callback: msRest.ServiceCallback<Models.SoftwareUpdateConfigurationRun>): void;
    /**
     * Return list of software update configuration runs
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param [options] The optional parameters
     * @returns Promise<Models.SoftwareUpdateConfigurationRunsListResponse>
     */
    list(resourceGroupName: string, automationAccountName: string, options?: Models.SoftwareUpdateConfigurationRunsListOptionalParams): Promise<Models.SoftwareUpdateConfigurationRunsListResponse>;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param callback The callback
     */
    list(resourceGroupName: string, automationAccountName: string, callback: msRest.ServiceCallback<Models.SoftwareUpdateConfigurationRunListResult>): void;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroupName: string, automationAccountName: string, options: Models.SoftwareUpdateConfigurationRunsListOptionalParams, callback: msRest.ServiceCallback<Models.SoftwareUpdateConfigurationRunListResult>): void;
}
//# sourceMappingURL=softwareUpdateConfigurationRuns.d.ts.map