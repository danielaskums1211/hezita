/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/jobScheduleOperationsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a JobScheduleOperations. */
var JobScheduleOperations = /** @class */ (function () {
    /**
     * Create a JobScheduleOperations.
     * @param {AutomationClientContext} client Reference to the service client.
     */
    function JobScheduleOperations(client) {
        this.client = client;
    }
    JobScheduleOperations.prototype.deleteMethod = function (resourceGroupName, automationAccountName, jobScheduleId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            jobScheduleId: jobScheduleId,
            options: options
        }, deleteMethodOperationSpec, callback);
    };
    JobScheduleOperations.prototype.get = function (resourceGroupName, automationAccountName, jobScheduleId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            jobScheduleId: jobScheduleId,
            options: options
        }, getOperationSpec, callback);
    };
    JobScheduleOperations.prototype.create = function (resourceGroupName, automationAccountName, jobScheduleId, parameters, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            jobScheduleId: jobScheduleId,
            parameters: parameters,
            options: options
        }, createOperationSpec, callback);
    };
    JobScheduleOperations.prototype.listByAutomationAccount = function (resourceGroupName, automationAccountName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            options: options
        }, listByAutomationAccountOperationSpec, callback);
    };
    JobScheduleOperations.prototype.listByAutomationAccountNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByAutomationAccountNextOperationSpec, callback);
    };
    return JobScheduleOperations;
}());
export { JobScheduleOperations };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var deleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobSchedules/{jobScheduleId}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.automationAccountName,
        Parameters.jobScheduleId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobSchedules/{jobScheduleId}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.automationAccountName,
        Parameters.jobScheduleId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.JobSchedule
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var createOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobSchedules/{jobScheduleId}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.automationAccountName,
        Parameters.jobScheduleId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: __assign(__assign({}, Mappers.JobScheduleCreateParameters), { required: true })
    },
    responses: {
        201: {
            bodyMapper: Mappers.JobSchedule
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listByAutomationAccountOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/jobSchedules",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.automationAccountName,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter,
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.JobScheduleListResult
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listByAutomationAccountNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.JobScheduleListResult
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=jobScheduleOperations.js.map