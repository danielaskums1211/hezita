import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { AutomationClientContext } from "../automationClientContext";
/** Class representing a NodeReports. */
export declare class NodeReports {
    private readonly client;
    /**
     * Create a NodeReports.
     * @param {AutomationClientContext} client Reference to the service client.
     */
    constructor(client: AutomationClientContext);
    /**
     * Retrieve the Dsc node report list by node id.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeId The parameters supplied to the list operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.NodeReportsListByNodeResponse>
     */
    listByNode(resourceGroupName: string, automationAccountName: string, nodeId: string, options?: Models.NodeReportsListByNodeOptionalParams): Promise<Models.NodeReportsListByNodeResponse>;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeId The parameters supplied to the list operation.
     * @param callback The callback
     */
    listByNode(resourceGroupName: string, automationAccountName: string, nodeId: string, callback: msRest.ServiceCallback<Models.DscNodeReportListResult>): void;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeId The parameters supplied to the list operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByNode(resourceGroupName: string, automationAccountName: string, nodeId: string, options: Models.NodeReportsListByNodeOptionalParams, callback: msRest.ServiceCallback<Models.DscNodeReportListResult>): void;
    /**
     * Retrieve the Dsc node report data by node id and report id.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeId The Dsc node id.
     * @param reportId The report id.
     * @param [options] The optional parameters
     * @returns Promise<Models.NodeReportsGetResponse>
     */
    get(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, options?: msRest.RequestOptionsBase): Promise<Models.NodeReportsGetResponse>;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeId The Dsc node id.
     * @param reportId The report id.
     * @param callback The callback
     */
    get(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, callback: msRest.ServiceCallback<Models.DscNodeReport>): void;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeId The Dsc node id.
     * @param reportId The report id.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DscNodeReport>): void;
    /**
     * Retrieve the Dsc node reports by node id and report id.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeId The Dsc node id.
     * @param reportId The report id.
     * @param [options] The optional parameters
     * @returns Promise<Models.NodeReportsGetContentResponse>
     */
    getContent(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, options?: msRest.RequestOptionsBase): Promise<Models.NodeReportsGetContentResponse>;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeId The Dsc node id.
     * @param reportId The report id.
     * @param callback The callback
     */
    getContent(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, callback: msRest.ServiceCallback<any>): void;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeId The Dsc node id.
     * @param reportId The report id.
     * @param options The optional parameters
     * @param callback The callback
     */
    getContent(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<any>): void;
    /**
     * Retrieve the Dsc node report list by node id.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.NodeReportsListByNodeNextResponse>
     */
    listByNodeNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.NodeReportsListByNodeNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByNodeNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DscNodeReportListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByNodeNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DscNodeReportListResult>): void;
}
//# sourceMappingURL=nodeReports.d.ts.map