/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/runbookOperationsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a RunbookOperations. */
var RunbookOperations = /** @class */ (function () {
    /**
     * Create a RunbookOperations.
     * @param {AutomationClientContext} client Reference to the service client.
     */
    function RunbookOperations(client) {
        this.client = client;
    }
    /**
     * Publish runbook draft.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param runbookName The parameters supplied to the publish runbook operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.RunbookPublishResponse>
     */
    RunbookOperations.prototype.publish = function (resourceGroupName, automationAccountName, runbookName, options) {
        return this.beginPublish(resourceGroupName, automationAccountName, runbookName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    RunbookOperations.prototype.getContent = function (resourceGroupName, automationAccountName, runbookName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            runbookName: runbookName,
            options: options
        }, getContentOperationSpec, callback);
    };
    RunbookOperations.prototype.get = function (resourceGroupName, automationAccountName, runbookName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            runbookName: runbookName,
            options: options
        }, getOperationSpec, callback);
    };
    RunbookOperations.prototype.createOrUpdate = function (resourceGroupName, automationAccountName, runbookName, parameters, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            runbookName: runbookName,
            parameters: parameters,
            options: options
        }, createOrUpdateOperationSpec, callback);
    };
    RunbookOperations.prototype.update = function (resourceGroupName, automationAccountName, runbookName, parameters, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            runbookName: runbookName,
            parameters: parameters,
            options: options
        }, updateOperationSpec, callback);
    };
    RunbookOperations.prototype.deleteMethod = function (resourceGroupName, automationAccountName, runbookName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            runbookName: runbookName,
            options: options
        }, deleteMethodOperationSpec, callback);
    };
    RunbookOperations.prototype.listByAutomationAccount = function (resourceGroupName, automationAccountName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            options: options
        }, listByAutomationAccountOperationSpec, callback);
    };
    /**
     * Publish runbook draft.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param runbookName The parameters supplied to the publish runbook operation.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    RunbookOperations.prototype.beginPublish = function (resourceGroupName, automationAccountName, runbookName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            runbookName: runbookName,
            options: options
        }, beginPublishOperationSpec, options);
    };
    RunbookOperations.prototype.listByAutomationAccountNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByAutomationAccountNextOperationSpec, callback);
    };
    return RunbookOperations;
}());
export { RunbookOperations };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getContentOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/content",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.automationAccountName,
        Parameters.runbookName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Stream"
                }
            }
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.automationAccountName,
        Parameters.runbookName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.Runbook
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var createOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.automationAccountName,
        Parameters.runbookName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: __assign(__assign({}, Mappers.RunbookCreateOrUpdateParameters), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.Runbook
        },
        201: {
            bodyMapper: Mappers.Runbook
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var updateOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.automationAccountName,
        Parameters.runbookName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: __assign(__assign({}, Mappers.RunbookUpdateParameters), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.Runbook
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var deleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.automationAccountName,
        Parameters.runbookName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        204: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listByAutomationAccountOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.automationAccountName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RunbookListResult
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var beginPublishOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/runbooks/{runbookName}/publish",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.automationAccountName,
        Parameters.runbookName
    ],
    queryParameters: [
        Parameters.apiVersion3
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        202: {
            headersMapper: Mappers.RunbookPublishHeaders
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listByAutomationAccountNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RunbookListResult
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=runbookOperations.js.map