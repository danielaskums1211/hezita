import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { AutomationClientContext } from "../automationClientContext";
/** Class representing a AgentRegistrationInformation. */
export declare class AgentRegistrationInformation {
    private readonly client;
    /**
     * Create a AgentRegistrationInformation.
     * @param {AutomationClientContext} client Reference to the service client.
     */
    constructor(client: AutomationClientContext);
    /**
     * Retrieve the automation agent registration information.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param [options] The optional parameters
     * @returns Promise<Models.AgentRegistrationInformationGetResponse>
     */
    get(resourceGroupName: string, automationAccountName: string, options?: msRest.RequestOptionsBase): Promise<Models.AgentRegistrationInformationGetResponse>;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param callback The callback
     */
    get(resourceGroupName: string, automationAccountName: string, callback: msRest.ServiceCallback<Models.AgentRegistration>): void;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, automationAccountName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AgentRegistration>): void;
    /**
     * Regenerate a primary or secondary agent registration key
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param parameters The name of the agent registration key to be regenerated
     * @param [options] The optional parameters
     * @returns Promise<Models.AgentRegistrationInformationRegenerateKeyResponse>
     */
    regenerateKey(resourceGroupName: string, automationAccountName: string, parameters: Models.AgentRegistrationRegenerateKeyParameter, options?: msRest.RequestOptionsBase): Promise<Models.AgentRegistrationInformationRegenerateKeyResponse>;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param parameters The name of the agent registration key to be regenerated
     * @param callback The callback
     */
    regenerateKey(resourceGroupName: string, automationAccountName: string, parameters: Models.AgentRegistrationRegenerateKeyParameter, callback: msRest.ServiceCallback<Models.AgentRegistration>): void;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param parameters The name of the agent registration key to be regenerated
     * @param options The optional parameters
     * @param callback The callback
     */
    regenerateKey(resourceGroupName: string, automationAccountName: string, parameters: Models.AgentRegistrationRegenerateKeyParameter, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.AgentRegistration>): void;
}
//# sourceMappingURL=agentRegistrationInformation.d.ts.map