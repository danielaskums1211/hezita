import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { AutomationClientContext } from "../automationClientContext";
/** Class representing a DscNodeConfigurationOperations. */
export declare class DscNodeConfigurationOperations {
    private readonly client;
    /**
     * Create a DscNodeConfigurationOperations.
     * @param {AutomationClientContext} client Reference to the service client.
     */
    constructor(client: AutomationClientContext);
    /**
     * Delete the Dsc node configurations by node configuration.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeConfigurationName The Dsc node configuration name.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeConfigurationName The Dsc node configuration name.
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeConfigurationName The Dsc node configuration name.
     * @param options The optional parameters
     * @param callback The callback
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Retrieve the Dsc node configurations by node configuration.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeConfigurationName The Dsc node configuration name.
     * @param [options] The optional parameters
     * @returns Promise<Models.DscNodeConfigurationGetResponse>
     */
    get(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, options?: msRest.RequestOptionsBase): Promise<Models.DscNodeConfigurationGetResponse>;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeConfigurationName The Dsc node configuration name.
     * @param callback The callback
     */
    get(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, callback: msRest.ServiceCallback<Models.DscNodeConfiguration>): void;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeConfigurationName The Dsc node configuration name.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DscNodeConfiguration>): void;
    /**
     * Create the node configuration identified by node configuration name.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeConfigurationName The Dsc node configuration name.
     * @param parameters The create or update parameters for configuration.
     * @param [options] The optional parameters
     * @returns Promise<Models.DscNodeConfigurationCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, parameters: Models.DscNodeConfigurationCreateOrUpdateParameters, options?: msRest.RequestOptionsBase): Promise<Models.DscNodeConfigurationCreateOrUpdateResponse>;
    /**
     * Retrieve a list of dsc node configurations.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param [options] The optional parameters
     * @returns Promise<Models.DscNodeConfigurationListByAutomationAccountResponse>
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: Models.DscNodeConfigurationListByAutomationAccountOptionalParams): Promise<Models.DscNodeConfigurationListByAutomationAccountResponse>;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param callback The callback
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: msRest.ServiceCallback<Models.DscNodeConfigurationListResult>): void;
    /**
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: Models.DscNodeConfigurationListByAutomationAccountOptionalParams, callback: msRest.ServiceCallback<Models.DscNodeConfigurationListResult>): void;
    /**
     * Create the node configuration identified by node configuration name.
     * @param resourceGroupName Name of an Azure Resource group.
     * @param automationAccountName The name of the automation account.
     * @param nodeConfigurationName The Dsc node configuration name.
     * @param parameters The create or update parameters for configuration.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, parameters: Models.DscNodeConfigurationCreateOrUpdateParameters, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Retrieve a list of dsc node configurations.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DscNodeConfigurationListByAutomationAccountNextResponse>
     */
    listByAutomationAccountNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.DscNodeConfigurationListByAutomationAccountNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByAutomationAccountNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DscNodeConfigurationListResult>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByAutomationAccountNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DscNodeConfigurationListResult>): void;
}
//# sourceMappingURL=dscNodeConfigurationOperations.d.ts.map