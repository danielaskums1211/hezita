/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/nodeReportsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a NodeReports. */
var NodeReports = /** @class */ (function () {
    /**
     * Create a NodeReports.
     * @param {AutomationClientContext} client Reference to the service client.
     */
    function NodeReports(client) {
        this.client = client;
    }
    NodeReports.prototype.listByNode = function (resourceGroupName, automationAccountName, nodeId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            nodeId: nodeId,
            options: options
        }, listByNodeOperationSpec, callback);
    };
    NodeReports.prototype.get = function (resourceGroupName, automationAccountName, nodeId, reportId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            nodeId: nodeId,
            reportId: reportId,
            options: options
        }, getOperationSpec, callback);
    };
    NodeReports.prototype.getContent = function (resourceGroupName, automationAccountName, nodeId, reportId, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            automationAccountName: automationAccountName,
            nodeId: nodeId,
            reportId: reportId,
            options: options
        }, getContentOperationSpec, callback);
    };
    NodeReports.prototype.listByNodeNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listByNodeNextOperationSpec, callback);
    };
    return NodeReports;
}());
export { NodeReports };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listByNodeOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}/reports",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.automationAccountName,
        Parameters.nodeId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.filter,
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DscNodeReportListResult
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}/reports/{reportId}",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.automationAccountName,
        Parameters.nodeId,
        Parameters.reportId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DscNodeReport
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var getContentOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/nodes/{nodeId}/reports/{reportId}/content",
    urlParameters: [
        Parameters.resourceGroupName,
        Parameters.automationAccountName,
        Parameters.nodeId,
        Parameters.reportId,
        Parameters.subscriptionId
    ],
    queryParameters: [
        Parameters.apiVersion2
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Object"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var listByNodeNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.DscNodeReportListResult
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=nodeReports.js.map